{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-6.2.0/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/icons8-whale-16.png","path":"images/icons8-whale-16.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/icons8-whale-32.png","path":"images/icons8-whale-32.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next-6.2.0/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1524531776444},{"_id":"themes/hexo-theme-next-6.2.0/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1524531776445},{"_id":"themes/hexo-theme-next-6.2.0/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1524531776446},{"_id":"themes/hexo-theme-next-6.2.0/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1524531776454},{"_id":"themes/hexo-theme-next-6.2.0/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1524531776453},{"_id":"themes/hexo-theme-next-6.2.0/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1524531776455},{"_id":"themes/hexo-theme-next-6.2.0/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1524531776455},{"_id":"themes/hexo-theme-next-6.2.0/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1524531776456},{"_id":"themes/hexo-theme-next-6.2.0/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1524531776457},{"_id":"themes/hexo-theme-next-6.2.0/README.md","hash":"4803a2fc3101612ecad7f59182427350700ddbc6","modified":1524531776458},{"_id":"themes/hexo-theme-next-6.2.0/bower.json","hash":"7ba085560656f4ce1f5bb60b722d77e9dfeb5e55","modified":1524531776460},{"_id":"themes/hexo-theme-next-6.2.0/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1524531776461},{"_id":"themes/hexo-theme-next-6.2.0/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1524531776484},{"_id":"themes/hexo-theme-next-6.2.0/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1524531776457},{"_id":"themes/hexo-theme-next-6.2.0/package.json","hash":"42d8b37c8b313fdfce98059bd4a629b928e47ba2","modified":1524531776607},{"_id":"source/_posts/rljs.md","hash":"a98ed3c7cb9668361459cb9ad1796bb11bd3f80e","modified":1525748533774},{"_id":"themes/hexo-theme-next-6.2.0/_config.yml","hash":"a29365d5b6eb2683ae654d8fedfe4f454c768512","modified":1524618006290},{"_id":"source/_posts/wuhezhizhong.md","hash":"4ebb8a15c3c20492480fc358a1f669e4b0163284","modified":1524541449590},{"_id":"source/_posts/minjiekaifa.md","hash":"e551d4c6bdec0e53c82e8d917d0a2bae38f78065","modified":1525328854472},{"_id":"source/categories/index.md","hash":"4b3881645bf9c41b413f54be201fa22df67c91d7","modified":1524531776437},{"_id":"source/tags/index.md","hash":"19115235a4e8c976c655d37888edc99e75e75cb9","modified":1524531776443},{"_id":"source/_posts/website.md","hash":"beb5d00ab5c50978cfe4f9e2c516d09e07bb27c2","modified":1524556582634},{"_id":"themes/hexo-theme-next-6.2.0/.github/CONTRIBUTING.md","hash":"869dcd36524e2c61ddd2315c1266edca7f0da6c9","modified":1524531776447},{"_id":"themes/hexo-theme-next-6.2.0/.github/CODE_OF_CONDUCT.md","hash":"22f2ccc5522563b67c8663849fc1d6cbae93a8ff","modified":1524531776447},{"_id":"themes/hexo-theme-next-6.2.0/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1524531776449},{"_id":"themes/hexo-theme-next-6.2.0/.github/PULL_REQUEST_TEMPLATE.md","hash":"36201119490a04107c8179b10202548a9d0e5e60","modified":1524531776449},{"_id":"themes/hexo-theme-next-6.2.0/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1524531776452},{"_id":"themes/hexo-theme-next-6.2.0/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1524531776453},{"_id":"themes/hexo-theme-next-6.2.0/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1524531776463},{"_id":"themes/hexo-theme-next-6.2.0/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1524531776462},{"_id":"themes/hexo-theme-next-6.2.0/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1524531776464},{"_id":"themes/hexo-theme-next-6.2.0/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1524531776465},{"_id":"themes/hexo-theme-next-6.2.0/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1524531776466},{"_id":"themes/hexo-theme-next-6.2.0/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"d0bc29c02b61e4433108987412685d991afd1a95","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/MATH.md","hash":"bdbbcaf88f86de3d762fd1459fd5a0893cf4bce6","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/languages/en.yml","hash":"cb5dd7b59c126aafaa6f6b5763d0b24cd65fb0f6","modified":1524531776489},{"_id":"themes/hexo-theme-next-6.2.0/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1524531776488},{"_id":"themes/hexo-theme-next-6.2.0/languages/fr.yml","hash":"83db90d90c27a587dde82e1dcd34fffb9f73659e","modified":1524531776490},{"_id":"themes/hexo-theme-next-6.2.0/languages/id.yml","hash":"1d6a87905286701958cbbba60943c1f26671d271","modified":1524531776491},{"_id":"themes/hexo-theme-next-6.2.0/languages/it.yml","hash":"7f5e58c97da9e5fb594d3bb872e912577f454151","modified":1524531776492},{"_id":"themes/hexo-theme-next-6.2.0/languages/ja.yml","hash":"29b71f703352a303377be1723490bb91cb9fb0c9","modified":1524531776493},{"_id":"themes/hexo-theme-next-6.2.0/languages/ko.yml","hash":"7f481acf4debafac1ebe382eae73a0e2ce2c6ce9","modified":1524531776494},{"_id":"themes/hexo-theme-next-6.2.0/languages/nl.yml","hash":"1cbc1fdbb9dcbd6542df7623d01498eabf5cc9fb","modified":1524531776495},{"_id":"themes/hexo-theme-next-6.2.0/languages/pt-BR.yml","hash":"891dcc00e002c6dfceda95155459034501337023","modified":1524531776496},{"_id":"themes/hexo-theme-next-6.2.0/languages/pt.yml","hash":"c168a5fe202ececf2a32d60678b78cffcfa38dfd","modified":1524531776497},{"_id":"themes/hexo-theme-next-6.2.0/languages/ru.yml","hash":"30622bbf65529ae74737ccf6e1ccd9198b2684fe","modified":1524531776498},{"_id":"themes/hexo-theme-next-6.2.0/languages/tr.yml","hash":"4e8748afbd7a1409d63f833f233d19d1330c57f9","modified":1524531776499},{"_id":"themes/hexo-theme-next-6.2.0/languages/de.yml","hash":"ee9543b3a2487f713562c726ec0c7d08533864b5","modified":1524531776487},{"_id":"themes/hexo-theme-next-6.2.0/languages/vi.yml","hash":"1676223a98dbc9e9dab4463afc6092f1ac7d9a19","modified":1524531776501},{"_id":"themes/hexo-theme-next-6.2.0/languages/zh-HK.yml","hash":"5737600de3fa42136a583c676605a0a337fc4bf6","modified":1524531776503},{"_id":"themes/hexo-theme-next-6.2.0/languages/zh-TW.yml","hash":"f1291813d6edafec28ed0ac4c932e949704811ef","modified":1524531776504},{"_id":"themes/hexo-theme-next-6.2.0/layout/_layout.swig","hash":"a1dc3c4f6a9023e5987bd11971703656834d4aa9","modified":1524531776507},{"_id":"themes/hexo-theme-next-6.2.0/languages/zh-CN.yml","hash":"b2ae2d067f180f6c71f400c8222a1d468a05c895","modified":1524531776502},{"_id":"themes/hexo-theme-next-6.2.0/layout/archive.swig","hash":"678a6cab739b54da9dfb2d6634848cffdc7aab6a","modified":1524531776598},{"_id":"themes/hexo-theme-next-6.2.0/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1524531776599},{"_id":"themes/hexo-theme-next-6.2.0/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1524531776599},{"_id":"themes/hexo-theme-next-6.2.0/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1524531776604},{"_id":"themes/hexo-theme-next-6.2.0/layout/page.swig","hash":"fbf2c3d14c3e5730fad75d7d106bf7f070ccd69c","modified":1524531776601},{"_id":"themes/hexo-theme-next-6.2.0/scripts/helpers.js","hash":"85811e77311b7b8255ef2c124a59fa4e6b6ac819","modified":1524531776608},{"_id":"themes/hexo-theme-next-6.2.0/layout/post.swig","hash":"ceba7287574c429a235aa7a62bf7a3dc1efb265a","modified":1524531776603},{"_id":"themes/hexo-theme-next-6.2.0/scripts/merge-configs.js","hash":"176952dfe3605c2ab57f3f7cdbac4f2487825c41","modified":1524531776609},{"_id":"themes/hexo-theme-next-6.2.0/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1524531776610},{"_id":"themes/hexo-theme-next-6.2.0/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1524531776605},{"_id":"themes/hexo-theme-next-6.2.0/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1524531777059},{"_id":"source/_posts/pythoncore.md","hash":"40c63efb921a2d5df36429c27b1e5fd6cdcca1f1","modified":1525740456534},{"_id":"themes/hexo-theme-next-6.2.0/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1524531777061},{"_id":"themes/hexo-theme-next-6.2.0/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776961},{"_id":"themes/hexo-theme-next-6.2.0/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1524531777057},{"_id":"source/_posts/minjiekaifa/498627-20160828231647539-1014399922.png","hash":"5e4c0bd573f1931e9b37f709e003de5002c0f4c0","modified":1524618622087},{"_id":"source/_posts/minjiekaifa/498627-20160828231739089-846443922.png","hash":"8171fb5b1f923deaa6e488726d37f72b0fd2061a","modified":1524618646762},{"_id":"themes/hexo-theme-next-6.2.0/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/ru/README.md","hash":"f80fc5b6678a104de086856a25dcfded73f07bc6","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/CONTRIBUTING.md","hash":"f2a2d6e68c5f65e27303b40f5285a8a4a5adae4c","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/MATH.md","hash":"08c630dc7bd479e49d7d5aa813df628e7726bd7f","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/README.md","hash":"15a61c2eb19d3eceac479db415ca4a30587456c7","modified":1524531776480},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"1ec7a0e9ac64b2c84aa1fd7ba2c662be1dbcb407","modified":1524531776481},{"_id":"themes/hexo-theme-next-6.2.0/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1524531776505},{"_id":"themes/hexo-theme-next-6.2.0/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1524531776506},{"_id":"themes/hexo-theme-next-6.2.0/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1524531776507},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1524531776511},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/post-copyright.swig","hash":"949bf640c011689e518ad480299ab19785df4b80","modified":1524531776512},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/post-related.swig","hash":"e8dfb86eb62b9c2bc1435d6d1afa95d3b4c7b931","modified":1524531776513},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/post.swig","hash":"866e92690c8188f711186fed65f720f12b9f2b11","modified":1524531776514},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/reward.swig","hash":"8dc3b6ba76c389aaa0810cbd0df206f7096d76a0","modified":1524531776515},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/sidebar.swig","hash":"2d8e3b4a211d55f4861eb2375b6fdd786484bf71","modified":1524531776518},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/wechat-subscriber.swig","hash":"616ffee93e84958e72ee0f996808f866c4ccdbf7","modified":1524531776519},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/breadcrumb.swig","hash":"4b48fdbfe3bf41ddeda4ff74c1ff17ab9f15c14e","modified":1524531776520},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/comments.swig","hash":"2e8c3df265e9ae38003d1321fb80fb3b12cb6a97","modified":1524531776521},{"_id":"themes/hexo-theme-next-6.2.0/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"684dffabee3132055df10f66ff65c482a9b57a66","modified":1524531776467},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/page-header.swig","hash":"206cbd6ac9ca6a219a8516f59beae25b3c770199","modified":1524531776530},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1524531776530},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1524531776540},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1524531776541},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/footer.swig","hash":"96feda6cf096297a17f07ee81254cc41768d2184","modified":1524531776522},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/noscript.swig","hash":"f8c7e729ad6e72b4c705a2c5d5041589c2b4cc52","modified":1524531776542},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/vendors.swig","hash":"f134aeb8d5bee351e5277edb92ac694af314b75f","modified":1524531776547},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/bookmark.swig","hash":"ed62ea83d3f2c9db2ea57bf23a7d765ed82504c2","modified":1524531776560},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/copy-code.swig","hash":"6a2c6c5766667943b320066d3b293afacb3b8c6e","modified":1524531776570},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1524531776571},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/github-banner.swig","hash":"736cb278fa09d3b4ed6f305b56353941ea918793","modified":1524531776572},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/needsharebutton.swig","hash":"debba9b7110f635204a15df148194d4c2fd2668b","modified":1524531776577},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/pangu.swig","hash":"ccf0035086e14dcefa24c2907301edf4c37d5448","modified":1524531776578},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1524531776585},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1524531776588},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/button.js","hash":"496e3846f353d253dad944b2ed8fdc4e02dcc28a","modified":1524531776612},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/center-quote.js","hash":"5c87817385986748617fa87dee9cba654566adcd","modified":1524531776612},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/exturl.js","hash":"4f928ef9ad0ae8e3d766352b8861bc22f96de5d8","modified":1524531776614},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/full-image.js","hash":"2118895d2d5e379240b27399a6c988a74f25a427","modified":1524531776617},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/include-raw.js","hash":"1f7bafba9cf3c94f5735873bd52e93ddcf37f8a2","modified":1524531776624},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/group-pictures.js","hash":"696157d4e4382fdbe29c674b0f4b433d47db449b","modified":1524531776621},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/label.js","hash":"d8bfb2974c6afef2c085642857b70b6569b4a097","modified":1524531776627},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/lazy-image.js","hash":"92c0ead5f503cfc4ee7c254ebfb00a2623fa1890","modified":1524531776628},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/note.js","hash":"1cec218c9fcaa8fb4144bf9d0b39babcaafac8d4","modified":1524531776630},{"_id":"themes/hexo-theme-next-6.2.0/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1524531776631},{"_id":"themes/hexo-theme-next-6.2.0/source/css/main.styl","hash":"2a62e2a11e9cdcc69e538d856d6f9ce228a07c93","modified":1524531776959},{"_id":"themes/hexo-theme-next-6.2.0/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1524531776962},{"_id":"themes/hexo-theme-next-6.2.0/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1524531776962},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1524531776580},{"_id":"themes/hexo-theme-next-6.2.0/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1524531776964},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1524531776965},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1524531776971},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1524531776969},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1524531776973},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1524531776976},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1524531776977},{"_id":"themes/hexo-theme-next-6.2.0/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1524531776975},{"_id":"themes/hexo-theme-next-6.2.0/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1524531776978},{"_id":"themes/hexo-theme-next-6.2.0/source/images/icons8-whale-16.png","hash":"b0f7d967de363cba6ec74143c8649e35b67e3ecb","modified":1524531776980},{"_id":"themes/hexo-theme-next-6.2.0/source/images/icons8-whale-32.png","hash":"6a9f81750551e526052fcfdfce9fb415157c5435","modified":1524531776980},{"_id":"themes/hexo-theme-next-6.2.0/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1524531776981},{"_id":"themes/hexo-theme-next-6.2.0/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1524531776982},{"_id":"themes/hexo-theme-next-6.2.0/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1524531776987},{"_id":"themes/hexo-theme-next-6.2.0/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1524531776990},{"_id":"themes/hexo-theme-next-6.2.0/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1524531776991},{"_id":"themes/hexo-theme-next-6.2.0/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1524531776985},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776544},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776545},{"_id":"themes/hexo-theme-next-6.2.0/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1524531776979},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776846},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776849},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776861},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776949},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524531776957},{"_id":"source/_posts/pythoncore/pythoncore.png","hash":"0e2116f9d1e6f149c302d19df2ec46d6dfa12077","modified":1525740456564},{"_id":"source/_posts/rljs/rljs.png","hash":"1d8cc0451c74287e7ee59589c55d3e2e03dada6f","modified":1525336838848},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1524531776523},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/head/head-unique.swig","hash":"2048f9a47bfcc14b689d776028626f46d2865732","modified":1524531776524},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/head/head.swig","hash":"60555b19a3b4bf203baa9bc0ea6267674f95235c","modified":1524531776525},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/header/index.swig","hash":"83f6256070bad5f56f9298b046b00d4bfc562ffd","modified":1524531776526},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/header/brand.swig","hash":"82e4a5e469d6f39b3e503ed879e4f32db31ec4f1","modified":1524531776526},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/header/menu.swig","hash":"f3ae3168801304af3d80ec3b84264e1d4201cb89","modified":1524531776527},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/header/sub-menu.swig","hash":"3f11ae8e9084f39628cd2006931d39a2069b9dd6","modified":1524531776529},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/search/index.swig","hash":"f6454c452b2e90a8c760321bce7e3dc6119b71fa","modified":1524531776532},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1524531776532},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1524531776533},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1524531776535},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1524531776536},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1524531776537},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1524531776536},{"_id":"themes/hexo-theme-next-6.2.0/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1524531776539},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1524531776543},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1524531776544},{"_id":"themes/hexo-theme-next-6.2.0/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1524531776546},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1524531776549},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1524531776550},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1524531776551},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/busuanzi-counter.swig","hash":"c43f41b7f3c0743d1e673af2e787ea34a67fc9cb","modified":1524531776552},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1524531776553},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1524531776554},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/firestore.swig","hash":"d67d9a176a276cdab6f2bcb7eb3650fbca5459c4","modified":1524531776554},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/google-analytics.swig","hash":"cfc932c5db04fef64cc56d3ba0b8ddf3a15a63bd","modified":1524531776555},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1524531776556},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1524531776557},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1524531776558},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/lean-analytics.swig","hash":"7973b4741863362cd9d023216de4a43eb23dc227","modified":1524531776557},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1524531776559},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1524531776562},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/disqus.swig","hash":"a693a2c00497471d06113443f548b676ee2e527d","modified":1524531776562},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1524531776564},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/hypercomments.swig","hash":"787d482d797c38e77d69629ebb88d45f972216b7","modified":1524531776565},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/livere.swig","hash":"7cf0c589d95a2d1848266ffe2357e91c95d2e7f8","modified":1524531776566},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/index.swig","hash":"18a58db53f1eef50462ee0065d4445b7fbb04fb5","modified":1524531776565},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/valine.swig","hash":"de1fac9bb3f0cab88b1ed1950f76c7eb0037aeda","modified":1524531776568},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/comments/youyan.swig","hash":"ab181c036cda9656f87bb1a749e3e7cbc437f012","modified":1524531776569},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/math/index.swig","hash":"30e9e55d9af2ced6e6b156a042026a8b480f0ab0","modified":1524531776573},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/math/katex.swig","hash":"860de4ce6fccc516d2f779a4b600a4214d8c18e2","modified":1524531776574},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/math/mathjax.swig","hash":"9a865d013b6d273bbbfc3999e8657844b0c48752","modified":1524531776576},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1524531776593},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/search/localsearch.swig","hash":"71c897f9b107dd0de1b7f649633cf583c206a9db","modified":1524531776594},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1524531776597},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1524531776596},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1524531776509},{"_id":"themes/hexo-theme-next-6.2.0/layout/_macro/menu/menu-item.swig","hash":"aab518204d3125e948796a9ba6b56b09cade2d92","modified":1524531776510},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1524531776843},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1524531776846},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1524531776856},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_mixins/base.styl","hash":"4d6dd32dae6f0ea93d43c5cfa0106b6cb46c3b00","modified":1524531776859},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_variables/Gemini.styl","hash":"8b5fc9e6621a5de04ae7d9ef117683c69965fb00","modified":1524531776948},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_variables/Pisces.styl","hash":"b89e68789e6dac24e00250528f4fc9ae8aa3599b","modified":1524531776955},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1524531776948},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_variables/base.styl","hash":"534b9dec93f3e235c217b97314d4bf513fa3e5ba","modified":1524531776957},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1524531777037},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1524531777052},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/bootstrap.js","hash":"8e9ed6392620ba68726c0ade4868100d831daba8","modified":1524531776996},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1524531776995},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1524531776994},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1524531776999},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1524531777003},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/motion.js","hash":"bea49fc6392bd38fb6f80d041d95d23051423aa2","modified":1524531777006},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/post-details.js","hash":"02acfa1862d5e4345d6a7cee08841cc9e2fb0259","modified":1524531777009},{"_id":"source/_posts/rljs/timg.jpg","hash":"457ce08cba0552e30e94cd2475a0f9a19585c9d0","modified":1525402348088},{"_id":"source/_posts/website/website.png","hash":"e64dc62eb242fed34431c0e180f3e05d5b3e01e8","modified":1524564805806},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1524531777014},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/utils.js","hash":"d8d288bc41af85fc72882239529131cbd6a13f9d","modified":1524531777016},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1524531777013},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1524531777042},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1524531777021},{"_id":"source/_posts/minjiekaifa/minjiekaifa.png","hash":"d0e6bec98c4b0412b6fdcb2d3ee000c5894ceb42","modified":1524564727898},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1524531776590},{"_id":"themes/hexo-theme-next-6.2.0/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1524531776592},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1524531776643},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1524531776636},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1524531776634},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1524531776639},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1524531776645},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1524531776679},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1524531776750},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/scaffolding/base.styl","hash":"97bb39756e85f5b27bba7f43270105ad01d736c9","modified":1524531776826},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1524531776828},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1524531776831},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1524531776836},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1524531776834},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/scaffolding/tables.styl","hash":"52bc8ba71b91d954530b35dfc63b402a02b1321d","modified":1524531776838},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1524531776821},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1524531776870},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Gemini/index.styl","hash":"c08eb379718fa5af267fd8c5fe9b926003c0c7c7","modified":1524531776865},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1524531776876},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1524531776874},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/_menu.styl","hash":"f3aa863adf972569b72f2df6bc6a914e7daace99","modified":1524531776881},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1524531776888},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/index.styl","hash":"e3b275a5bbd7ce5e8937691a432bb45fc4818ba7","modified":1524551863510},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1524531776914},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1524531776915},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2798224276a40a1978c47a6c251a942666b216ba","modified":1524551621747},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1524531776925},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1524531776929},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Pisces/_layout.styl","hash":"ab7eb1d66e300264a225feb6f8bed55683c96cdf","modified":1524531776939},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Pisces/_menu.styl","hash":"cc961108b12ab97d9216606ceb1cd1cd31ab20f0","modified":1524531776940},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1524531776943},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Pisces/_sub-menu.styl","hash":"be72740313a9a0477b8a22f62e4c8ffa6d23a2e5","modified":1524531776945},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1524531776946},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1524531776937},{"_id":"themes/hexo-theme-next-6.2.0/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1524531777011},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Muse/_menu.styl","hash":"3cc7646583218d16925ced7b70865e63a901d4a7","modified":1524531776921},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Pisces/_sidebar.styl","hash":"df16dc995eb9ad498df2edcfc3e20528fc9aa133","modified":1524531776944},{"_id":"themes/hexo-theme-next-6.2.0/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1524531777035},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1524531776662},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/footer/footer.styl","hash":"7dd247c8869fdefb5a007045d00f3ef8ceecf300","modified":1524531776647},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1524531776664},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/highlight/highlight.styl","hash":"835c1340571bd6c4ec263c482cf13283fb047e49","modified":1524531776663},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1524531776726},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1524531776724},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1524531776732},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1524531776734},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1524531776737},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9e05a2232faabb41bcebb51d545d897a76f077da","modified":1524531776742},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1524531776743},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1524531776736},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/sidebar.styl","hash":"94d76e6da600a36d80e2470326ebb6b3be447ccb","modified":1524531776745},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1524531776746},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1524531776753},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1524531776756},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/full-image.styl","hash":"d79c051abb8ab7b5ee5da29a28587704fd5108f5","modified":1524531776763},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1524531776771},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1524531776773},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1524531776774},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1524531776779},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1524531776780},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1524531776785},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1524531776681},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1524531776694},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1524531776682},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1524531776690},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-gallery.styl","hash":"c3271c206c5ce67c6c641a865b9bd8bbcafbed21","modified":1524551472672},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-expand.styl","hash":"317c9ceda655e9dc373ce8e7b71d20b794fce9a4","modified":1524531776696},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1524531776703},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1524531776706},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-meta.styl","hash":"330c8884efb5612e7eb03986d87d29e8b0651974","modified":1524531776698},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1524531776710},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1524531776708},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1524531776713},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-title.styl","hash":"adfd6d2d3b34adc4b476a0ea91e19020456a3b1a","modified":1524531776714},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1524531776715},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1524531776717},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/post/post.styl","hash":"1faeb3fca899df9d033e4e6ad9a4867cdce7ef9d","modified":1524531776721},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/algolia-search.styl","hash":"f4d8144c22544bdb89787c14ab9d39578dae4b7c","modified":1524531776793},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1524531776795},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1524531776799},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1524531776802},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1524531776806},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1524531776810},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1524531776813},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1524531776814},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/related-posts.styl","hash":"acfdd76b1c90d2e384affb3d0006a39b524609d2","modified":1524531776817},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/third-party/third-party.styl","hash":"0b9c4140d7bc526553553552c3ed92da7c81e0b6","modified":1524531776819},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1524531776903},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1524531776907},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1524531776930},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1524531776667},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/pages/breadcrumb.styl","hash":"630be616447a982413030e561bbd3a80ac14b120","modified":1524531776672},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1524531776676},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1524531776677},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1524531776678},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1524531776674},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/header/github-banner.styl","hash":"3f3d2a43d1a326bad25b633c8ec9ddd87867224c","modified":1524531776648},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1524531776654},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1524531776650},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1524531776657},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1524531776658},{"_id":"themes/hexo-theme-next-6.2.0/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1524531776659},{"_id":"source/_posts/wuhezhizhong/wuhezhizhong.png","hash":"18e722b200bb820067b9608d9c72847a38f81fde","modified":1524563405024},{"_id":"public/categories/index.html","hash":"b1a244f08eab2533e19cd356d6c5cd4c489d66f0","modified":1525746500018},{"_id":"public/tags/index.html","hash":"395290d780471eb9ef1a40975d96e616893fc552","modified":1525746500018},{"_id":"public/2018/04/24/wuhezhizhong/index.html","hash":"1f4e11e1ad2cfb84199b06dee13b761623757088","modified":1525746500019},{"_id":"public/archives/index.html","hash":"24cb2b98c7b6e64a74a80583ba25b02e7d4fdfc9","modified":1525746500019},{"_id":"public/archives/2018/index.html","hash":"a2d1a939f011cefd0705f4e0cb4f1ceccdbfc6a2","modified":1525746500019},{"_id":"public/archives/2018/04/index.html","hash":"099b9f21f62da262c65256ff03da9fb71aebd5d5","modified":1525746500019},{"_id":"public/archives/2018/05/index.html","hash":"c53ce618aa3e4d9df60dc194c0e447f8801e9442","modified":1525746500019},{"_id":"public/categories/阅读/index.html","hash":"9c7042156b0d84d17e2f8f0d4136504fae50849b","modified":1525746500019},{"_id":"public/categories/编程/index.html","hash":"fe41d8aec0485ad07840cd0709bc09494bd57565","modified":1525746500019},{"_id":"public/categories/编程/Python/index.html","hash":"f80d0edb93281c6c6bdfb3b66a89f93a61b11448","modified":1525746500019},{"_id":"public/tags/阅读/index.html","hash":"191f049afcdfe3b320f87bfd0f894cfaa7ddd1b6","modified":1525746500020},{"_id":"public/tags/人文/index.html","hash":"ffd86671181636fc851839a46b15edddfcf226f2","modified":1525746500020},{"_id":"public/tags/历史/index.html","hash":"5e8acdea61370631be131f350b316794d7703af5","modified":1525746500020},{"_id":"public/tags/社会科学/index.html","hash":"a439cafb690426ac207813dd67adc1a22603058c","modified":1525746500020},{"_id":"public/tags/心理学/index.html","hash":"4ad924830c8ff8cfa37ff1443a2655946a159446","modified":1525746500020},{"_id":"public/tags/读书/index.html","hash":"582974c746710e90782653f2e04f658be70ac596","modified":1525746500020},{"_id":"public/tags/开发/index.html","hash":"858bca378058dc54e7369e41babfea6bd9ecaf1a","modified":1525746500020},{"_id":"public/tags/原则/index.html","hash":"6d3e199a8dc4bf5e97fde68ccacc6463b226a135","modified":1525746500020},{"_id":"public/tags/编程/index.html","hash":"af5f955f49a328c9bd27b41cbbe122aae3eb782e","modified":1525746500020},{"_id":"public/tags/Python/index.html","hash":"977eb62f6d05d2026c87f7c9ca17aa3986338fee","modified":1525746500020},{"_id":"public/2018/05/05/pythoncore/index.html","hash":"bbd6233f316f05c2c45798efaf72e19f116466d5","modified":1525746500020},{"_id":"public/2018/05/02/rljs/index.html","hash":"6e7b90a660fc57712deb71a870585af3d5afafb5","modified":1525748576932},{"_id":"public/2018/04/24/minjiekaifa/index.html","hash":"0c53857d5e992cfc9ad388ed9642265808bf7e28","modified":1525746500021},{"_id":"public/2018/04/24/website/index.html","hash":"6066eaaa712adf76ec5ea1f8272d9991ead3cfdc","modified":1525746500021},{"_id":"public/index.html","hash":"824fe43b9f3f5c38584bd5af57423b2ba17e316f","modified":1525748576932}],"Category":[{"name":"阅读","_id":"cjgwyoamg0004g8bkbbwe6qv5"},{"name":"编程","_id":"cjgwyob0q000tg8bk7klkjc1z"},{"name":"Python","parent":"cjgwyob0q000tg8bk7klkjc1z","_id":"cjgwyob0s000wg8bk3imc3s1q"}],"Data":[],"Page":[{"title":"分类","date":"2018-04-23T11:59:24.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-04-23 19:59:24\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-04-24T01:02:56.437Z","path":"categories/index.html","layout":"page","_id":"cjgwyoalr0001g8bknvznvpic","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-04-23T11:58:04.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-04-23 19:58:04\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-04-24T01:02:56.443Z","path":"tags/index.html","layout":"page","_id":"cjgwyoam20003g8bkz56er20o","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"人类简史-从动物到上帝","ISBN":9787508660752,"出版社":"中信出版社","出版时间":"2017-02-28T16:00:00.000Z","版次":2,"description":"<!--more-->","photos":["/2018/05/02/rljs/rljs.png"],"_content":"\n经过5天的泛读后，初略的写下几点简单的读后感，并摘录了部分书中的观点。本书从不同的视角解读了人类的发展历史，解析了人类自身、人类与其他物种之间的关系及相互影响，并对于人类未来的发展方向提供了多个角度的思辨观点。很多观点都是之前我们未曾考虑或不愿直面的。以后还需要花更多的时间来精读此书。\n\n**读后感：**\n\n1. 人类现行的法律、法规、权利、义务、货币、民族等等一切均由集体认可的集体想象而来。\n2. 从许多小文化到少数大文化（帝国）再到最后的全球单一文化（帝国），应该是人类历史无法避免的结果。\n3. 人类经过多次革命，已经摧毁或改变了地球上大部分的生物，最终可能也将摧毁自身。\n4. 对于历史的研究，现在更多的只是研究了历史的表象，而缺少对于产生原因的多方位、深层次思考。\n\n\n**内容摘录：**\n\n## 第一部分 认知革命\n\n### 第四章 毁天灭地的人类洪水\n\n{% blockquote P69 %}\n智人的第一波殖民正是整个动物界最大也是最快速的一场生态浩劫。其中受创最深的是那些大型、毛茸茸的动物。在认知革命发生的时候，地球上大约有200属体重超过50公斤的大型陆生哺乳动物。而等到农业革命的时候，只剩下大约100属。换句话说，甚至远在人类还没有发明轮子、文字和铁器之前，智人就已经让全球大约一半的大型兽类魂归西天、就此灭绝了。 \n{% endblockquote %}\n\n{% blockquote P70~P71 %}\n\n第一波的灭绝浪潮是由于采集者的扩张，接着第二波灭绝浪潮则是因为农民的扩张；今日的第三波灭绝浪潮：由工业活动所造成的物种灭绝。对全世界上所有的大型动物来说，这场人类洪水的唯一幸存者可能只剩下人类自己，还有其他登上诺亚方舟但只作为人类盘中佳肴的家禽家畜。\n\n{% endblockquote %}\n\n## 第二部分 农业革命\n\n### 第五章 史上最大骗局\n\n{% blockquote P77 %}\n\n农业革命让人类的食物总量增加，但量的增加并不代表吃得更好、过的更悠闲，反而只是造成人口爆炸，而且产生一群养尊处优、娇生惯养的精英分子。农业革命可以说是史上最大的一桩骗局。\n\n{% endblockquote %}\n\n{% blockquote P78 %}\n\n其实不是我们驯化了小麦，而是小麦驯化了我们。\n\n{% endblockquote %}\n\n{% blockquote P88~P93 %}\n\n**革命的受害者**  \n\n{% endblockquote %}\n\n### 第六章 盖起金字塔\n\n{% blockquote P98 %}\n\n正是这些征收来的多余粮食，养活了政治、战争、艺术和哲学，建立起了宫殿、堡垒、纪念碑和庙宇。在现代晚期之前，总人口有九成以上是农民，日出而作、胼手胝足。他们生产出来的多余粮食养活了一小撮的精英份子：国王、官员、战士、牧师、艺术家和思想家，但历史写的几乎全是这些人的故事。于是，历史只告诉了我们极少数的人在做什么，而其他绝大多数人的生活就是不停地挑水耕田。 \n\n{% endblockquote %}\n\n### 第八章 历史从无正义\n\n{% blockquote P133 %}\n\n就算身处不同阶级的人发展出了完全一样的能力，因为他们面对的游戏规则不同，最后结果也可能天差地别。这场游戏，其实早就被种种法律限制和潜规则束缚住了手脚，根本不知道公平在哪里。\n\n{% endblockquote %}\n\n## 第三部分 人类的融合统一\n\n### 第九章 历史的方向\n\n{% blockquote P157 %}\n\n农业革命之后，人类社会规模变得更大、更复杂，而维系社会秩序的虚拟故事也更为细致完整。人类机会从出生到死亡都被种种虚构的故事和概念围绕，让他们以特定的方式思考，以特定的标准行事，想要特定的东西，也遵守特定的规范。就是这样，让数百万计的陌生人能遵照这种人造而非天生的直觉，合作无间。这种人造的直觉就是“文化“。 \n\n{% endblockquote %}\n\n### 第十章 金钱的味道\n\n{% blockquote P178 %}\n\n千百年来，哲学家、思想家和宗教人物都对钱嗤之以鼻，称钱为万恶的根源。但就算真是如此，钱同时也是人类最能接受的东西。比起语言、法律、文化、宗教和社会习俗，钱的心胸更为开阔。所有人类创造的信念系统之中，只有金钱能够跨越几乎所有文化鸿沟，不会因为宗教、性别、种族、年龄或性取向而有所歧视。也多亏了有金钱制度，才让人就算互不认识，不清楚对方人品，也能携手合作。\n\n{% endblockquote %}\n\n### 第十一章 帝国的愿景\n\n{% blockquote P197 %}\n\n![](timg.jpg)\n\n泰姬·玛哈尔陵。究竟算是“纯正”的印度文化，还是外来的穆斯林帝国主义建筑？\n\n{% endblockquote %}\n\n### 第十二章 宗教的法则\n\n{% blockquote P199 %}\n\n在金钱和帝国之外，宗教是第三种让人类统一的力量。\n\n{% endblockquote %}\n\n### 第十三章 成功的秘密\n\n历史是所谓的“二级”混沌系统。\n\n## 第四部分 科学革命\n\n### 第十四章 发现自己的无知\n\n{% blockquote P236 %}\n\n现代科学的基础就是拉丁文前缀\"ignoramus-\"，意为”我们不知道“。从这种立场，我们承认了自己并非无所不知。更重要的是，我们也愿意在知识进展之后，承认过去相信的可能是错的。于是，再也没有什么概念、想法或理论是神圣不可挑战的。\n\n{% endblockquote %}\n\n### 第十五章 科学与帝国的联姻\n\n{% blockquote P266~P267 %}\n\n欧洲帝国主义和先前的所有帝国完全不同。过去的帝国主义者都认为自己已经了解了整个世界，“征服世界”只是为了要利用和传播他们自己对于世界的看法。相较之下，欧洲帝国主义之所以要前往遥远的彼岸，除了为了新领土，也是为了新知识。\n\n{% endblockquote %}\n\n### 第十六章 资本主义教条\n\n{% blockquote P293 %}\n\n在《国富论》的第一卷第八章，亚当·斯密提出了一下的创新论述：如果地主、织工或鞋匠赚得的利润高于养家糊口基本所需，就会雇佣更多助手，好进一步提高自己的利润。利润越高，能雇的助手也越多。由此可见，民间企业的获利正是社会整体财富和繁荣的基础。\n\n{% endblockquote %}\n\n{% blockquote P294 %}\n\n所谓的“资本主义”（Capitalism），认为“资本”（capital）与“财富”（wealth）有所不同。资本指的是投入生产的各种金钱、物品和资源。而财富指的则是那些埋在地下或者浪费在非生产性活动的金钱、物品和资源。\n\n{% endblockquote %}\n\n{% blockquote P296~P297 %}\n\n资本主义的基本原则在于，因为不论是正义、自由甚至快乐都必须依赖于经济成长，所以可以说经济成长就是至善（或至少十分接近）。\n\n科学家总能每隔几年就取得另一项发现，提出另一项发明。\n\n印钞票的是银行和政府，但最后埋单的是科学家。\n\n如果实验室的脚步不敌泡沫破灭的速度，可以想见经济前景就会令人十分担忧。\n\n{% endblockquote %}\n\n资本主义与帝国的紧密关系。-东印度公司、鸦片战争。\n\n{% blockquote P306 %}\n\n西方政府几乎就像是资本家的工会。\n\n{% endblockquote %}\n\n{% blockquote P339~P340 %}\n\n如果组成国家和市场的是一个又一个孤单的个人，而不是关系紧密的家庭或社群，要干预个人生活也就容易得多。现代高楼公寓，所有人各自锁在自己家里，连每户该付多少清洁费都无法达成共识，又怎么可能一起站出来抵抗国家机器？\n\n国家、市场与个人之见的交易并不容易。国家和市场对于权力义务的划分意见不同，个人有抱怨这两者要得太多，又给得太少。很多时候，个人遭到市场的剥削，而国家不但不保护个人，反而还用军队、警察和官僚施加迫害。没人想得到，这种互动本身就有不少问题，更公然抵触过去世世代代的社会运作模式，竟然还是能够成功。经过数百万年的演化，人类的生活和思考方式都预设自己属于社群。但仅仅过了两个世纪，我们就成了互相疏远的个人。这可以说是文化力量的最佳证明。\n\n{% endblockquote %}\n\n{% blockquote P342 %}\n\n现代所兴起的两大想象社群，就是“民族”和“消费大众”。所谓民族，是国家的想象社群。而所谓消费大众，则是市场的想象社群。\n\n消费主义和民族主义可说是夙夜匪解，努力说服我们自己和其他数百万人是一伙的，认为我们有共同的过去、共同的利益以及共同的未来。这并不是谎言，而是一场想象。\n\n{% endblockquote %}\n\n### 第十七章 工业的巨轮\n\n### 第十八章 一场永远的革命\n\n### 第十九章 从此过着幸福快乐的日子\n\n### 第二十章 智人末日\n\n以上四章可供思辨的内容较多，就不再一一摘录。","source":"_posts/rljs.md","raw":"title: 人类简史-从动物到上帝\nISBN: 9787508660752\n出版社: 中信出版社\n出版时间: 2017-03-01\n版次: 2\ndescription: <!--more-->\nphotos:\n- /2018/05/02/rljs/rljs.png\n\ntags:\n\n - 阅读\n\n - 人文\n\n - 历史\n\n - 社会科学\n\ncategories:\n\n - 阅读\n\n---\n\n经过5天的泛读后，初略的写下几点简单的读后感，并摘录了部分书中的观点。本书从不同的视角解读了人类的发展历史，解析了人类自身、人类与其他物种之间的关系及相互影响，并对于人类未来的发展方向提供了多个角度的思辨观点。很多观点都是之前我们未曾考虑或不愿直面的。以后还需要花更多的时间来精读此书。\n\n**读后感：**\n\n1. 人类现行的法律、法规、权利、义务、货币、民族等等一切均由集体认可的集体想象而来。\n2. 从许多小文化到少数大文化（帝国）再到最后的全球单一文化（帝国），应该是人类历史无法避免的结果。\n3. 人类经过多次革命，已经摧毁或改变了地球上大部分的生物，最终可能也将摧毁自身。\n4. 对于历史的研究，现在更多的只是研究了历史的表象，而缺少对于产生原因的多方位、深层次思考。\n\n\n**内容摘录：**\n\n## 第一部分 认知革命\n\n### 第四章 毁天灭地的人类洪水\n\n{% blockquote P69 %}\n智人的第一波殖民正是整个动物界最大也是最快速的一场生态浩劫。其中受创最深的是那些大型、毛茸茸的动物。在认知革命发生的时候，地球上大约有200属体重超过50公斤的大型陆生哺乳动物。而等到农业革命的时候，只剩下大约100属。换句话说，甚至远在人类还没有发明轮子、文字和铁器之前，智人就已经让全球大约一半的大型兽类魂归西天、就此灭绝了。 \n{% endblockquote %}\n\n{% blockquote P70~P71 %}\n\n第一波的灭绝浪潮是由于采集者的扩张，接着第二波灭绝浪潮则是因为农民的扩张；今日的第三波灭绝浪潮：由工业活动所造成的物种灭绝。对全世界上所有的大型动物来说，这场人类洪水的唯一幸存者可能只剩下人类自己，还有其他登上诺亚方舟但只作为人类盘中佳肴的家禽家畜。\n\n{% endblockquote %}\n\n## 第二部分 农业革命\n\n### 第五章 史上最大骗局\n\n{% blockquote P77 %}\n\n农业革命让人类的食物总量增加，但量的增加并不代表吃得更好、过的更悠闲，反而只是造成人口爆炸，而且产生一群养尊处优、娇生惯养的精英分子。农业革命可以说是史上最大的一桩骗局。\n\n{% endblockquote %}\n\n{% blockquote P78 %}\n\n其实不是我们驯化了小麦，而是小麦驯化了我们。\n\n{% endblockquote %}\n\n{% blockquote P88~P93 %}\n\n**革命的受害者**  \n\n{% endblockquote %}\n\n### 第六章 盖起金字塔\n\n{% blockquote P98 %}\n\n正是这些征收来的多余粮食，养活了政治、战争、艺术和哲学，建立起了宫殿、堡垒、纪念碑和庙宇。在现代晚期之前，总人口有九成以上是农民，日出而作、胼手胝足。他们生产出来的多余粮食养活了一小撮的精英份子：国王、官员、战士、牧师、艺术家和思想家，但历史写的几乎全是这些人的故事。于是，历史只告诉了我们极少数的人在做什么，而其他绝大多数人的生活就是不停地挑水耕田。 \n\n{% endblockquote %}\n\n### 第八章 历史从无正义\n\n{% blockquote P133 %}\n\n就算身处不同阶级的人发展出了完全一样的能力，因为他们面对的游戏规则不同，最后结果也可能天差地别。这场游戏，其实早就被种种法律限制和潜规则束缚住了手脚，根本不知道公平在哪里。\n\n{% endblockquote %}\n\n## 第三部分 人类的融合统一\n\n### 第九章 历史的方向\n\n{% blockquote P157 %}\n\n农业革命之后，人类社会规模变得更大、更复杂，而维系社会秩序的虚拟故事也更为细致完整。人类机会从出生到死亡都被种种虚构的故事和概念围绕，让他们以特定的方式思考，以特定的标准行事，想要特定的东西，也遵守特定的规范。就是这样，让数百万计的陌生人能遵照这种人造而非天生的直觉，合作无间。这种人造的直觉就是“文化“。 \n\n{% endblockquote %}\n\n### 第十章 金钱的味道\n\n{% blockquote P178 %}\n\n千百年来，哲学家、思想家和宗教人物都对钱嗤之以鼻，称钱为万恶的根源。但就算真是如此，钱同时也是人类最能接受的东西。比起语言、法律、文化、宗教和社会习俗，钱的心胸更为开阔。所有人类创造的信念系统之中，只有金钱能够跨越几乎所有文化鸿沟，不会因为宗教、性别、种族、年龄或性取向而有所歧视。也多亏了有金钱制度，才让人就算互不认识，不清楚对方人品，也能携手合作。\n\n{% endblockquote %}\n\n### 第十一章 帝国的愿景\n\n{% blockquote P197 %}\n\n![](timg.jpg)\n\n泰姬·玛哈尔陵。究竟算是“纯正”的印度文化，还是外来的穆斯林帝国主义建筑？\n\n{% endblockquote %}\n\n### 第十二章 宗教的法则\n\n{% blockquote P199 %}\n\n在金钱和帝国之外，宗教是第三种让人类统一的力量。\n\n{% endblockquote %}\n\n### 第十三章 成功的秘密\n\n历史是所谓的“二级”混沌系统。\n\n## 第四部分 科学革命\n\n### 第十四章 发现自己的无知\n\n{% blockquote P236 %}\n\n现代科学的基础就是拉丁文前缀\"ignoramus-\"，意为”我们不知道“。从这种立场，我们承认了自己并非无所不知。更重要的是，我们也愿意在知识进展之后，承认过去相信的可能是错的。于是，再也没有什么概念、想法或理论是神圣不可挑战的。\n\n{% endblockquote %}\n\n### 第十五章 科学与帝国的联姻\n\n{% blockquote P266~P267 %}\n\n欧洲帝国主义和先前的所有帝国完全不同。过去的帝国主义者都认为自己已经了解了整个世界，“征服世界”只是为了要利用和传播他们自己对于世界的看法。相较之下，欧洲帝国主义之所以要前往遥远的彼岸，除了为了新领土，也是为了新知识。\n\n{% endblockquote %}\n\n### 第十六章 资本主义教条\n\n{% blockquote P293 %}\n\n在《国富论》的第一卷第八章，亚当·斯密提出了一下的创新论述：如果地主、织工或鞋匠赚得的利润高于养家糊口基本所需，就会雇佣更多助手，好进一步提高自己的利润。利润越高，能雇的助手也越多。由此可见，民间企业的获利正是社会整体财富和繁荣的基础。\n\n{% endblockquote %}\n\n{% blockquote P294 %}\n\n所谓的“资本主义”（Capitalism），认为“资本”（capital）与“财富”（wealth）有所不同。资本指的是投入生产的各种金钱、物品和资源。而财富指的则是那些埋在地下或者浪费在非生产性活动的金钱、物品和资源。\n\n{% endblockquote %}\n\n{% blockquote P296~P297 %}\n\n资本主义的基本原则在于，因为不论是正义、自由甚至快乐都必须依赖于经济成长，所以可以说经济成长就是至善（或至少十分接近）。\n\n科学家总能每隔几年就取得另一项发现，提出另一项发明。\n\n印钞票的是银行和政府，但最后埋单的是科学家。\n\n如果实验室的脚步不敌泡沫破灭的速度，可以想见经济前景就会令人十分担忧。\n\n{% endblockquote %}\n\n资本主义与帝国的紧密关系。-东印度公司、鸦片战争。\n\n{% blockquote P306 %}\n\n西方政府几乎就像是资本家的工会。\n\n{% endblockquote %}\n\n{% blockquote P339~P340 %}\n\n如果组成国家和市场的是一个又一个孤单的个人，而不是关系紧密的家庭或社群，要干预个人生活也就容易得多。现代高楼公寓，所有人各自锁在自己家里，连每户该付多少清洁费都无法达成共识，又怎么可能一起站出来抵抗国家机器？\n\n国家、市场与个人之见的交易并不容易。国家和市场对于权力义务的划分意见不同，个人有抱怨这两者要得太多，又给得太少。很多时候，个人遭到市场的剥削，而国家不但不保护个人，反而还用军队、警察和官僚施加迫害。没人想得到，这种互动本身就有不少问题，更公然抵触过去世世代代的社会运作模式，竟然还是能够成功。经过数百万年的演化，人类的生活和思考方式都预设自己属于社群。但仅仅过了两个世纪，我们就成了互相疏远的个人。这可以说是文化力量的最佳证明。\n\n{% endblockquote %}\n\n{% blockquote P342 %}\n\n现代所兴起的两大想象社群，就是“民族”和“消费大众”。所谓民族，是国家的想象社群。而所谓消费大众，则是市场的想象社群。\n\n消费主义和民族主义可说是夙夜匪解，努力说服我们自己和其他数百万人是一伙的，认为我们有共同的过去、共同的利益以及共同的未来。这并不是谎言，而是一场想象。\n\n{% endblockquote %}\n\n### 第十七章 工业的巨轮\n\n### 第十八章 一场永远的革命\n\n### 第十九章 从此过着幸福快乐的日子\n\n### 第二十章 智人末日\n\n以上四章可供思辨的内容较多，就不再一一摘录。","slug":"rljs","published":1,"date":"2018-05-02T08:18:33.452Z","updated":"2018-05-08T03:02:13.774Z","_id":"cjgwyoalb0000g8bkolq9x5hg","comments":1,"layout":"post","link":"","content":"<p>经过5天的泛读后，初略的写下几点简单的读后感，并摘录了部分书中的观点。本书从不同的视角解读了人类的发展历史，解析了人类自身、人类与其他物种之间的关系及相互影响，并对于人类未来的发展方向提供了多个角度的思辨观点。很多观点都是之前我们未曾考虑或不愿直面的。以后还需要花更多的时间来精读此书。</p>\n<p><strong>读后感：</strong></p>\n<ol>\n<li>人类现行的法律、法规、权利、义务、货币、民族等等一切均由集体认可的集体想象而来。</li>\n<li>从许多小文化到少数大文化（帝国）再到最后的全球单一文化（帝国），应该是人类历史无法避免的结果。</li>\n<li>人类经过多次革命，已经摧毁或改变了地球上大部分的生物，最终可能也将摧毁自身。</li>\n<li>对于历史的研究，现在更多的只是研究了历史的表象，而缺少对于产生原因的多方位、深层次思考。</li>\n</ol>\n<p><strong>内容摘录：</strong></p>\n<h2 id=\"第一部分-认知革命\"><a href=\"#第一部分-认知革命\" class=\"headerlink\" title=\"第一部分 认知革命\"></a>第一部分 认知革命</h2><h3 id=\"第四章-毁天灭地的人类洪水\"><a href=\"#第四章-毁天灭地的人类洪水\" class=\"headerlink\" title=\"第四章 毁天灭地的人类洪水\"></a>第四章 毁天灭地的人类洪水</h3><blockquote><p>智人的第一波殖民正是整个动物界最大也是最快速的一场生态浩劫。其中受创最深的是那些大型、毛茸茸的动物。在认知革命发生的时候，地球上大约有200属体重超过50公斤的大型陆生哺乳动物。而等到农业革命的时候，只剩下大约100属。换句话说，甚至远在人类还没有发明轮子、文字和铁器之前，智人就已经让全球大约一半的大型兽类魂归西天、就此灭绝了。 </p>\n<footer><strong>P69</strong></footer></blockquote>\n<blockquote><p>第一波的灭绝浪潮是由于采集者的扩张，接着第二波灭绝浪潮则是因为农民的扩张；今日的第三波灭绝浪潮：由工业活动所造成的物种灭绝。对全世界上所有的大型动物来说，这场人类洪水的唯一幸存者可能只剩下人类自己，还有其他登上诺亚方舟但只作为人类盘中佳肴的家禽家畜。</p>\n<footer><strong>P70~P71</strong></footer></blockquote>\n<h2 id=\"第二部分-农业革命\"><a href=\"#第二部分-农业革命\" class=\"headerlink\" title=\"第二部分 农业革命\"></a>第二部分 农业革命</h2><h3 id=\"第五章-史上最大骗局\"><a href=\"#第五章-史上最大骗局\" class=\"headerlink\" title=\"第五章 史上最大骗局\"></a>第五章 史上最大骗局</h3><blockquote><p>农业革命让人类的食物总量增加，但量的增加并不代表吃得更好、过的更悠闲，反而只是造成人口爆炸，而且产生一群养尊处优、娇生惯养的精英分子。农业革命可以说是史上最大的一桩骗局。</p>\n<footer><strong>P77</strong></footer></blockquote>\n<blockquote><p>其实不是我们驯化了小麦，而是小麦驯化了我们。</p>\n<footer><strong>P78</strong></footer></blockquote>\n<blockquote><p><strong>革命的受害者</strong>  </p>\n<footer><strong>P88~P93</strong></footer></blockquote>\n<h3 id=\"第六章-盖起金字塔\"><a href=\"#第六章-盖起金字塔\" class=\"headerlink\" title=\"第六章 盖起金字塔\"></a>第六章 盖起金字塔</h3><blockquote><p>正是这些征收来的多余粮食，养活了政治、战争、艺术和哲学，建立起了宫殿、堡垒、纪念碑和庙宇。在现代晚期之前，总人口有九成以上是农民，日出而作、胼手胝足。他们生产出来的多余粮食养活了一小撮的精英份子：国王、官员、战士、牧师、艺术家和思想家，但历史写的几乎全是这些人的故事。于是，历史只告诉了我们极少数的人在做什么，而其他绝大多数人的生活就是不停地挑水耕田。 </p>\n<footer><strong>P98</strong></footer></blockquote>\n<h3 id=\"第八章-历史从无正义\"><a href=\"#第八章-历史从无正义\" class=\"headerlink\" title=\"第八章 历史从无正义\"></a>第八章 历史从无正义</h3><blockquote><p>就算身处不同阶级的人发展出了完全一样的能力，因为他们面对的游戏规则不同，最后结果也可能天差地别。这场游戏，其实早就被种种法律限制和潜规则束缚住了手脚，根本不知道公平在哪里。</p>\n<footer><strong>P133</strong></footer></blockquote>\n<h2 id=\"第三部分-人类的融合统一\"><a href=\"#第三部分-人类的融合统一\" class=\"headerlink\" title=\"第三部分 人类的融合统一\"></a>第三部分 人类的融合统一</h2><h3 id=\"第九章-历史的方向\"><a href=\"#第九章-历史的方向\" class=\"headerlink\" title=\"第九章 历史的方向\"></a>第九章 历史的方向</h3><blockquote><p>农业革命之后，人类社会规模变得更大、更复杂，而维系社会秩序的虚拟故事也更为细致完整。人类机会从出生到死亡都被种种虚构的故事和概念围绕，让他们以特定的方式思考，以特定的标准行事，想要特定的东西，也遵守特定的规范。就是这样，让数百万计的陌生人能遵照这种人造而非天生的直觉，合作无间。这种人造的直觉就是“文化“。 </p>\n<footer><strong>P157</strong></footer></blockquote>\n<h3 id=\"第十章-金钱的味道\"><a href=\"#第十章-金钱的味道\" class=\"headerlink\" title=\"第十章 金钱的味道\"></a>第十章 金钱的味道</h3><blockquote><p>千百年来，哲学家、思想家和宗教人物都对钱嗤之以鼻，称钱为万恶的根源。但就算真是如此，钱同时也是人类最能接受的东西。比起语言、法律、文化、宗教和社会习俗，钱的心胸更为开阔。所有人类创造的信念系统之中，只有金钱能够跨越几乎所有文化鸿沟，不会因为宗教、性别、种族、年龄或性取向而有所歧视。也多亏了有金钱制度，才让人就算互不认识，不清楚对方人品，也能携手合作。</p>\n<footer><strong>P178</strong></footer></blockquote>\n<h3 id=\"第十一章-帝国的愿景\"><a href=\"#第十一章-帝国的愿景\" class=\"headerlink\" title=\"第十一章 帝国的愿景\"></a>第十一章 帝国的愿景</h3><blockquote><p><img src=\"timg.jpg\" alt=\"\"></p>\n<p>泰姬·玛哈尔陵。究竟算是“纯正”的印度文化，还是外来的穆斯林帝国主义建筑？</p>\n<footer><strong>P197</strong></footer></blockquote>\n<h3 id=\"第十二章-宗教的法则\"><a href=\"#第十二章-宗教的法则\" class=\"headerlink\" title=\"第十二章 宗教的法则\"></a>第十二章 宗教的法则</h3><blockquote><p>在金钱和帝国之外，宗教是第三种让人类统一的力量。</p>\n<footer><strong>P199</strong></footer></blockquote>\n<h3 id=\"第十三章-成功的秘密\"><a href=\"#第十三章-成功的秘密\" class=\"headerlink\" title=\"第十三章 成功的秘密\"></a>第十三章 成功的秘密</h3><p>历史是所谓的“二级”混沌系统。</p>\n<h2 id=\"第四部分-科学革命\"><a href=\"#第四部分-科学革命\" class=\"headerlink\" title=\"第四部分 科学革命\"></a>第四部分 科学革命</h2><h3 id=\"第十四章-发现自己的无知\"><a href=\"#第十四章-发现自己的无知\" class=\"headerlink\" title=\"第十四章 发现自己的无知\"></a>第十四章 发现自己的无知</h3><blockquote><p>现代科学的基础就是拉丁文前缀”ignoramus-“，意为”我们不知道“。从这种立场，我们承认了自己并非无所不知。更重要的是，我们也愿意在知识进展之后，承认过去相信的可能是错的。于是，再也没有什么概念、想法或理论是神圣不可挑战的。</p>\n<footer><strong>P236</strong></footer></blockquote>\n<h3 id=\"第十五章-科学与帝国的联姻\"><a href=\"#第十五章-科学与帝国的联姻\" class=\"headerlink\" title=\"第十五章 科学与帝国的联姻\"></a>第十五章 科学与帝国的联姻</h3><blockquote><p>欧洲帝国主义和先前的所有帝国完全不同。过去的帝国主义者都认为自己已经了解了整个世界，“征服世界”只是为了要利用和传播他们自己对于世界的看法。相较之下，欧洲帝国主义之所以要前往遥远的彼岸，除了为了新领土，也是为了新知识。</p>\n<footer><strong>P266~P267</strong></footer></blockquote>\n<h3 id=\"第十六章-资本主义教条\"><a href=\"#第十六章-资本主义教条\" class=\"headerlink\" title=\"第十六章 资本主义教条\"></a>第十六章 资本主义教条</h3><blockquote><p>在《国富论》的第一卷第八章，亚当·斯密提出了一下的创新论述：如果地主、织工或鞋匠赚得的利润高于养家糊口基本所需，就会雇佣更多助手，好进一步提高自己的利润。利润越高，能雇的助手也越多。由此可见，民间企业的获利正是社会整体财富和繁荣的基础。</p>\n<footer><strong>P293</strong></footer></blockquote>\n<blockquote><p>所谓的“资本主义”（Capitalism），认为“资本”（capital）与“财富”（wealth）有所不同。资本指的是投入生产的各种金钱、物品和资源。而财富指的则是那些埋在地下或者浪费在非生产性活动的金钱、物品和资源。</p>\n<footer><strong>P294</strong></footer></blockquote>\n<blockquote><p>资本主义的基本原则在于，因为不论是正义、自由甚至快乐都必须依赖于经济成长，所以可以说经济成长就是至善（或至少十分接近）。</p>\n<p>科学家总能每隔几年就取得另一项发现，提出另一项发明。</p>\n<p>印钞票的是银行和政府，但最后埋单的是科学家。</p>\n<p>如果实验室的脚步不敌泡沫破灭的速度，可以想见经济前景就会令人十分担忧。</p>\n<footer><strong>P296~P297</strong></footer></blockquote>\n<p>资本主义与帝国的紧密关系。-东印度公司、鸦片战争。</p>\n<blockquote><p>西方政府几乎就像是资本家的工会。</p>\n<footer><strong>P306</strong></footer></blockquote>\n<blockquote><p>如果组成国家和市场的是一个又一个孤单的个人，而不是关系紧密的家庭或社群，要干预个人生活也就容易得多。现代高楼公寓，所有人各自锁在自己家里，连每户该付多少清洁费都无法达成共识，又怎么可能一起站出来抵抗国家机器？</p>\n<p>国家、市场与个人之见的交易并不容易。国家和市场对于权力义务的划分意见不同，个人有抱怨这两者要得太多，又给得太少。很多时候，个人遭到市场的剥削，而国家不但不保护个人，反而还用军队、警察和官僚施加迫害。没人想得到，这种互动本身就有不少问题，更公然抵触过去世世代代的社会运作模式，竟然还是能够成功。经过数百万年的演化，人类的生活和思考方式都预设自己属于社群。但仅仅过了两个世纪，我们就成了互相疏远的个人。这可以说是文化力量的最佳证明。</p>\n<footer><strong>P339~P340</strong></footer></blockquote>\n<blockquote><p>现代所兴起的两大想象社群，就是“民族”和“消费大众”。所谓民族，是国家的想象社群。而所谓消费大众，则是市场的想象社群。</p>\n<p>消费主义和民族主义可说是夙夜匪解，努力说服我们自己和其他数百万人是一伙的，认为我们有共同的过去、共同的利益以及共同的未来。这并不是谎言，而是一场想象。</p>\n<footer><strong>P342</strong></footer></blockquote>\n<h3 id=\"第十七章-工业的巨轮\"><a href=\"#第十七章-工业的巨轮\" class=\"headerlink\" title=\"第十七章 工业的巨轮\"></a>第十七章 工业的巨轮</h3><h3 id=\"第十八章-一场永远的革命\"><a href=\"#第十八章-一场永远的革命\" class=\"headerlink\" title=\"第十八章 一场永远的革命\"></a>第十八章 一场永远的革命</h3><h3 id=\"第十九章-从此过着幸福快乐的日子\"><a href=\"#第十九章-从此过着幸福快乐的日子\" class=\"headerlink\" title=\"第十九章 从此过着幸福快乐的日子\"></a>第十九章 从此过着幸福快乐的日子</h3><h3 id=\"第二十章-智人末日\"><a href=\"#第二十章-智人末日\" class=\"headerlink\" title=\"第二十章 智人末日\"></a>第二十章 智人末日</h3><p>以上四章可供思辨的内容较多，就不再一一摘录。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>经过5天的泛读后，初略的写下几点简单的读后感，并摘录了部分书中的观点。本书从不同的视角解读了人类的发展历史，解析了人类自身、人类与其他物种之间的关系及相互影响，并对于人类未来的发展方向提供了多个角度的思辨观点。很多观点都是之前我们未曾考虑或不愿直面的。以后还需要花更多的时间来精读此书。</p>\n<p><strong>读后感：</strong></p>\n<ol>\n<li>人类现行的法律、法规、权利、义务、货币、民族等等一切均由集体认可的集体想象而来。</li>\n<li>从许多小文化到少数大文化（帝国）再到最后的全球单一文化（帝国），应该是人类历史无法避免的结果。</li>\n<li>人类经过多次革命，已经摧毁或改变了地球上大部分的生物，最终可能也将摧毁自身。</li>\n<li>对于历史的研究，现在更多的只是研究了历史的表象，而缺少对于产生原因的多方位、深层次思考。</li>\n</ol>\n<p><strong>内容摘录：</strong></p>\n<h2 id=\"第一部分-认知革命\"><a href=\"#第一部分-认知革命\" class=\"headerlink\" title=\"第一部分 认知革命\"></a>第一部分 认知革命</h2><h3 id=\"第四章-毁天灭地的人类洪水\"><a href=\"#第四章-毁天灭地的人类洪水\" class=\"headerlink\" title=\"第四章 毁天灭地的人类洪水\"></a>第四章 毁天灭地的人类洪水</h3><blockquote><p>智人的第一波殖民正是整个动物界最大也是最快速的一场生态浩劫。其中受创最深的是那些大型、毛茸茸的动物。在认知革命发生的时候，地球上大约有200属体重超过50公斤的大型陆生哺乳动物。而等到农业革命的时候，只剩下大约100属。换句话说，甚至远在人类还没有发明轮子、文字和铁器之前，智人就已经让全球大约一半的大型兽类魂归西天、就此灭绝了。 </p>\n<footer><strong>P69</strong></footer></blockquote>\n<blockquote><p>第一波的灭绝浪潮是由于采集者的扩张，接着第二波灭绝浪潮则是因为农民的扩张；今日的第三波灭绝浪潮：由工业活动所造成的物种灭绝。对全世界上所有的大型动物来说，这场人类洪水的唯一幸存者可能只剩下人类自己，还有其他登上诺亚方舟但只作为人类盘中佳肴的家禽家畜。</p>\n<footer><strong>P70~P71</strong></footer></blockquote>\n<h2 id=\"第二部分-农业革命\"><a href=\"#第二部分-农业革命\" class=\"headerlink\" title=\"第二部分 农业革命\"></a>第二部分 农业革命</h2><h3 id=\"第五章-史上最大骗局\"><a href=\"#第五章-史上最大骗局\" class=\"headerlink\" title=\"第五章 史上最大骗局\"></a>第五章 史上最大骗局</h3><blockquote><p>农业革命让人类的食物总量增加，但量的增加并不代表吃得更好、过的更悠闲，反而只是造成人口爆炸，而且产生一群养尊处优、娇生惯养的精英分子。农业革命可以说是史上最大的一桩骗局。</p>\n<footer><strong>P77</strong></footer></blockquote>\n<blockquote><p>其实不是我们驯化了小麦，而是小麦驯化了我们。</p>\n<footer><strong>P78</strong></footer></blockquote>\n<blockquote><p><strong>革命的受害者</strong>  </p>\n<footer><strong>P88~P93</strong></footer></blockquote>\n<h3 id=\"第六章-盖起金字塔\"><a href=\"#第六章-盖起金字塔\" class=\"headerlink\" title=\"第六章 盖起金字塔\"></a>第六章 盖起金字塔</h3><blockquote><p>正是这些征收来的多余粮食，养活了政治、战争、艺术和哲学，建立起了宫殿、堡垒、纪念碑和庙宇。在现代晚期之前，总人口有九成以上是农民，日出而作、胼手胝足。他们生产出来的多余粮食养活了一小撮的精英份子：国王、官员、战士、牧师、艺术家和思想家，但历史写的几乎全是这些人的故事。于是，历史只告诉了我们极少数的人在做什么，而其他绝大多数人的生活就是不停地挑水耕田。 </p>\n<footer><strong>P98</strong></footer></blockquote>\n<h3 id=\"第八章-历史从无正义\"><a href=\"#第八章-历史从无正义\" class=\"headerlink\" title=\"第八章 历史从无正义\"></a>第八章 历史从无正义</h3><blockquote><p>就算身处不同阶级的人发展出了完全一样的能力，因为他们面对的游戏规则不同，最后结果也可能天差地别。这场游戏，其实早就被种种法律限制和潜规则束缚住了手脚，根本不知道公平在哪里。</p>\n<footer><strong>P133</strong></footer></blockquote>\n<h2 id=\"第三部分-人类的融合统一\"><a href=\"#第三部分-人类的融合统一\" class=\"headerlink\" title=\"第三部分 人类的融合统一\"></a>第三部分 人类的融合统一</h2><h3 id=\"第九章-历史的方向\"><a href=\"#第九章-历史的方向\" class=\"headerlink\" title=\"第九章 历史的方向\"></a>第九章 历史的方向</h3><blockquote><p>农业革命之后，人类社会规模变得更大、更复杂，而维系社会秩序的虚拟故事也更为细致完整。人类机会从出生到死亡都被种种虚构的故事和概念围绕，让他们以特定的方式思考，以特定的标准行事，想要特定的东西，也遵守特定的规范。就是这样，让数百万计的陌生人能遵照这种人造而非天生的直觉，合作无间。这种人造的直觉就是“文化“。 </p>\n<footer><strong>P157</strong></footer></blockquote>\n<h3 id=\"第十章-金钱的味道\"><a href=\"#第十章-金钱的味道\" class=\"headerlink\" title=\"第十章 金钱的味道\"></a>第十章 金钱的味道</h3><blockquote><p>千百年来，哲学家、思想家和宗教人物都对钱嗤之以鼻，称钱为万恶的根源。但就算真是如此，钱同时也是人类最能接受的东西。比起语言、法律、文化、宗教和社会习俗，钱的心胸更为开阔。所有人类创造的信念系统之中，只有金钱能够跨越几乎所有文化鸿沟，不会因为宗教、性别、种族、年龄或性取向而有所歧视。也多亏了有金钱制度，才让人就算互不认识，不清楚对方人品，也能携手合作。</p>\n<footer><strong>P178</strong></footer></blockquote>\n<h3 id=\"第十一章-帝国的愿景\"><a href=\"#第十一章-帝国的愿景\" class=\"headerlink\" title=\"第十一章 帝国的愿景\"></a>第十一章 帝国的愿景</h3><blockquote><p><img src=\"timg.jpg\" alt=\"\"></p>\n<p>泰姬·玛哈尔陵。究竟算是“纯正”的印度文化，还是外来的穆斯林帝国主义建筑？</p>\n<footer><strong>P197</strong></footer></blockquote>\n<h3 id=\"第十二章-宗教的法则\"><a href=\"#第十二章-宗教的法则\" class=\"headerlink\" title=\"第十二章 宗教的法则\"></a>第十二章 宗教的法则</h3><blockquote><p>在金钱和帝国之外，宗教是第三种让人类统一的力量。</p>\n<footer><strong>P199</strong></footer></blockquote>\n<h3 id=\"第十三章-成功的秘密\"><a href=\"#第十三章-成功的秘密\" class=\"headerlink\" title=\"第十三章 成功的秘密\"></a>第十三章 成功的秘密</h3><p>历史是所谓的“二级”混沌系统。</p>\n<h2 id=\"第四部分-科学革命\"><a href=\"#第四部分-科学革命\" class=\"headerlink\" title=\"第四部分 科学革命\"></a>第四部分 科学革命</h2><h3 id=\"第十四章-发现自己的无知\"><a href=\"#第十四章-发现自己的无知\" class=\"headerlink\" title=\"第十四章 发现自己的无知\"></a>第十四章 发现自己的无知</h3><blockquote><p>现代科学的基础就是拉丁文前缀”ignoramus-“，意为”我们不知道“。从这种立场，我们承认了自己并非无所不知。更重要的是，我们也愿意在知识进展之后，承认过去相信的可能是错的。于是，再也没有什么概念、想法或理论是神圣不可挑战的。</p>\n<footer><strong>P236</strong></footer></blockquote>\n<h3 id=\"第十五章-科学与帝国的联姻\"><a href=\"#第十五章-科学与帝国的联姻\" class=\"headerlink\" title=\"第十五章 科学与帝国的联姻\"></a>第十五章 科学与帝国的联姻</h3><blockquote><p>欧洲帝国主义和先前的所有帝国完全不同。过去的帝国主义者都认为自己已经了解了整个世界，“征服世界”只是为了要利用和传播他们自己对于世界的看法。相较之下，欧洲帝国主义之所以要前往遥远的彼岸，除了为了新领土，也是为了新知识。</p>\n<footer><strong>P266~P267</strong></footer></blockquote>\n<h3 id=\"第十六章-资本主义教条\"><a href=\"#第十六章-资本主义教条\" class=\"headerlink\" title=\"第十六章 资本主义教条\"></a>第十六章 资本主义教条</h3><blockquote><p>在《国富论》的第一卷第八章，亚当·斯密提出了一下的创新论述：如果地主、织工或鞋匠赚得的利润高于养家糊口基本所需，就会雇佣更多助手，好进一步提高自己的利润。利润越高，能雇的助手也越多。由此可见，民间企业的获利正是社会整体财富和繁荣的基础。</p>\n<footer><strong>P293</strong></footer></blockquote>\n<blockquote><p>所谓的“资本主义”（Capitalism），认为“资本”（capital）与“财富”（wealth）有所不同。资本指的是投入生产的各种金钱、物品和资源。而财富指的则是那些埋在地下或者浪费在非生产性活动的金钱、物品和资源。</p>\n<footer><strong>P294</strong></footer></blockquote>\n<blockquote><p>资本主义的基本原则在于，因为不论是正义、自由甚至快乐都必须依赖于经济成长，所以可以说经济成长就是至善（或至少十分接近）。</p>\n<p>科学家总能每隔几年就取得另一项发现，提出另一项发明。</p>\n<p>印钞票的是银行和政府，但最后埋单的是科学家。</p>\n<p>如果实验室的脚步不敌泡沫破灭的速度，可以想见经济前景就会令人十分担忧。</p>\n<footer><strong>P296~P297</strong></footer></blockquote>\n<p>资本主义与帝国的紧密关系。-东印度公司、鸦片战争。</p>\n<blockquote><p>西方政府几乎就像是资本家的工会。</p>\n<footer><strong>P306</strong></footer></blockquote>\n<blockquote><p>如果组成国家和市场的是一个又一个孤单的个人，而不是关系紧密的家庭或社群，要干预个人生活也就容易得多。现代高楼公寓，所有人各自锁在自己家里，连每户该付多少清洁费都无法达成共识，又怎么可能一起站出来抵抗国家机器？</p>\n<p>国家、市场与个人之见的交易并不容易。国家和市场对于权力义务的划分意见不同，个人有抱怨这两者要得太多，又给得太少。很多时候，个人遭到市场的剥削，而国家不但不保护个人，反而还用军队、警察和官僚施加迫害。没人想得到，这种互动本身就有不少问题，更公然抵触过去世世代代的社会运作模式，竟然还是能够成功。经过数百万年的演化，人类的生活和思考方式都预设自己属于社群。但仅仅过了两个世纪，我们就成了互相疏远的个人。这可以说是文化力量的最佳证明。</p>\n<footer><strong>P339~P340</strong></footer></blockquote>\n<blockquote><p>现代所兴起的两大想象社群，就是“民族”和“消费大众”。所谓民族，是国家的想象社群。而所谓消费大众，则是市场的想象社群。</p>\n<p>消费主义和民族主义可说是夙夜匪解，努力说服我们自己和其他数百万人是一伙的，认为我们有共同的过去、共同的利益以及共同的未来。这并不是谎言，而是一场想象。</p>\n<footer><strong>P342</strong></footer></blockquote>\n<h3 id=\"第十七章-工业的巨轮\"><a href=\"#第十七章-工业的巨轮\" class=\"headerlink\" title=\"第十七章 工业的巨轮\"></a>第十七章 工业的巨轮</h3><h3 id=\"第十八章-一场永远的革命\"><a href=\"#第十八章-一场永远的革命\" class=\"headerlink\" title=\"第十八章 一场永远的革命\"></a>第十八章 一场永远的革命</h3><h3 id=\"第十九章-从此过着幸福快乐的日子\"><a href=\"#第十九章-从此过着幸福快乐的日子\" class=\"headerlink\" title=\"第十九章 从此过着幸福快乐的日子\"></a>第十九章 从此过着幸福快乐的日子</h3><h3 id=\"第二十章-智人末日\"><a href=\"#第二十章-智人末日\" class=\"headerlink\" title=\"第二十章 智人末日\"></a>第二十章 智人末日</h3><p>以上四章可供思辨的内容较多，就不再一一摘录。</p>\n"},{"title":"乌合之众-大众心理研究","ISBN":9787510407550,"出版社":"新世界出版社","出版时间":"2011-07-31T16:00:00.000Z","版次":2,"photos":["/2018/04/24/wuhezhizhong/wuhezhizhong.png"],"_content":"","source":"_posts/wuhezhizhong.md","raw":"---\ntitle: 乌合之众-大众心理研究\nISBN: 9787510407550\n出版社: 新世界出版社\n出版时间: 2011-08-01\n版次: 2\nphotos:\n - /2018/04/24/wuhezhizhong/wuhezhizhong.png\ntags:\n - 阅读\n - 心理学\ncategories:\n - 阅读\n---","slug":"wuhezhizhong","published":1,"date":"2018-04-24T01:30:53.774Z","updated":"2018-04-24T03:44:09.590Z","comments":1,"layout":"post","link":"","_id":"cjgwyoalw0002g8bkh01jjqnl","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"敏捷软件开发原则","date":"2018-04-24T10:14:27.000Z","ISBN":9787115294685,"出版社":"人民邮电出版社","出版时间":"2012-10-31T16:00:00.000Z","版次":2,"description":"<!--more-->","photos":["/2018/04/24/minjiekaifa/minjiekaifa.png"],"_content":"\n### 测试驱动开发\n\n简单的3条测试规则：\n\n1. 除非已经编写了一个不能通过的单元测试，否则不编写任何产品代码；\n2. 只要编写能够正好导致测试不通过或者编译失败的单元测试就够了，无需更多；\n3. 只要编写能够正好使失败的单元测试通过的产品代码就够了，无需更多。\n\n#### 测试\n\n**单元测试**是用来验证系统中单个机制的白盒测试（white-box test）。\n\n单元测试可以作为一种非常有价值的文档。如果想知道如何调用一个函数或者创建一个对象，会有一个测试展示给你看。测试就像一套范例，它帮助其他程序员了解如何使用代码。这份文档是可编译的、可运行的、它保持最新。它不会撒谎。\n\n**验收测试**是用来验证系统满足客户需求的黑盒测试（black-box test）。\n\n验收测试是关于一项特性的最终文档。一旦客户编写完成了验证一项特性的验收测试，程序员可以阅读那些验收测试来真正地理解这项特性。所以，正如单元测试作为可编译、可执行的有关系统内部结构的文档那样，验收测试是有关系统特性的可以编译、可执行的文档。简而言之，验收测试是真正的需求文档。\n\n### SRP：单一职责原则\n\n假设有两个不同的应用程序使用Rectangle类。\n\n一个应用程序是有关计算几何学方面的，利用Rectangle类计算几何形状，但不会再屏幕上绘制矩形。\n\n另外一个应用程序实质上是有关图形绘制方面的，它可能也会进行一些计算几何方面的工作，但是它肯定会在屏幕上绘制矩形。\n\n![](498627-20160828231647539-1014399922.png)\n\n此时，Rectangle类具有两个职责。第一个职责提供了一个矩形几何形状的数学模型；第二个职责是把矩形在一个图形用户界面上绘制出来。\n\n对于SRP的违反导致了一些严重的问题。首先，我们必须在计算几何应用程序中包含进GUI代码。在.Net中，就必须要把GUI组建和计算几何应用一起构建、部署。\n\n其次，如果GraphicalApplication的改变由于一些原因导致了Rectangle的改变，那么这个改变会迫使我们重新构建、测试以及部署ComputationalGeometryApplication。如果忘记这样做，ComputationalGeometryApplication可能会以不可预测的方式失败。\n\n![](498627-20160828231739089-846443922.png)\n\n一个较好的设计是把这两个职责分离到两个完全不同的类中。这个设计把Rectangle类中进行计算的部分移动到了GeometricRectangle类中。现在矩形绘制方式的改变不会对ComputationalGeometryApplication类造成影响。","source":"_posts/minjiekaifa.md","raw":"---\ntitle: 敏捷软件开发原则\ndate: 2018-04-24 18:14:27\nISBN: 9787115294685\n出版社: 人民邮电出版社\n出版时间: 2012-11-01\n版次: 2\n\ndescription: <!--more-->\n\nphotos:\n\n- /2018/04/24/minjiekaifa/minjiekaifa.png\n\ntags: \n\n - 读书\n - 开发\n - 原则\n---\n\n### 测试驱动开发\n\n简单的3条测试规则：\n\n1. 除非已经编写了一个不能通过的单元测试，否则不编写任何产品代码；\n2. 只要编写能够正好导致测试不通过或者编译失败的单元测试就够了，无需更多；\n3. 只要编写能够正好使失败的单元测试通过的产品代码就够了，无需更多。\n\n#### 测试\n\n**单元测试**是用来验证系统中单个机制的白盒测试（white-box test）。\n\n单元测试可以作为一种非常有价值的文档。如果想知道如何调用一个函数或者创建一个对象，会有一个测试展示给你看。测试就像一套范例，它帮助其他程序员了解如何使用代码。这份文档是可编译的、可运行的、它保持最新。它不会撒谎。\n\n**验收测试**是用来验证系统满足客户需求的黑盒测试（black-box test）。\n\n验收测试是关于一项特性的最终文档。一旦客户编写完成了验证一项特性的验收测试，程序员可以阅读那些验收测试来真正地理解这项特性。所以，正如单元测试作为可编译、可执行的有关系统内部结构的文档那样，验收测试是有关系统特性的可以编译、可执行的文档。简而言之，验收测试是真正的需求文档。\n\n### SRP：单一职责原则\n\n假设有两个不同的应用程序使用Rectangle类。\n\n一个应用程序是有关计算几何学方面的，利用Rectangle类计算几何形状，但不会再屏幕上绘制矩形。\n\n另外一个应用程序实质上是有关图形绘制方面的，它可能也会进行一些计算几何方面的工作，但是它肯定会在屏幕上绘制矩形。\n\n![](498627-20160828231647539-1014399922.png)\n\n此时，Rectangle类具有两个职责。第一个职责提供了一个矩形几何形状的数学模型；第二个职责是把矩形在一个图形用户界面上绘制出来。\n\n对于SRP的违反导致了一些严重的问题。首先，我们必须在计算几何应用程序中包含进GUI代码。在.Net中，就必须要把GUI组建和计算几何应用一起构建、部署。\n\n其次，如果GraphicalApplication的改变由于一些原因导致了Rectangle的改变，那么这个改变会迫使我们重新构建、测试以及部署ComputationalGeometryApplication。如果忘记这样做，ComputationalGeometryApplication可能会以不可预测的方式失败。\n\n![](498627-20160828231739089-846443922.png)\n\n一个较好的设计是把这两个职责分离到两个完全不同的类中。这个设计把Rectangle类中进行计算的部分移动到了GeometricRectangle类中。现在矩形绘制方式的改变不会对ComputationalGeometryApplication类造成影响。","slug":"minjiekaifa","published":1,"updated":"2018-05-03T06:27:34.472Z","comments":1,"layout":"post","link":"","_id":"cjgwyoamo0006g8bklshenys0","content":"<h3 id=\"测试驱动开发\"><a href=\"#测试驱动开发\" class=\"headerlink\" title=\"测试驱动开发\"></a>测试驱动开发</h3><p>简单的3条测试规则：</p>\n<ol>\n<li>除非已经编写了一个不能通过的单元测试，否则不编写任何产品代码；</li>\n<li>只要编写能够正好导致测试不通过或者编译失败的单元测试就够了，无需更多；</li>\n<li>只要编写能够正好使失败的单元测试通过的产品代码就够了，无需更多。</li>\n</ol>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p><strong>单元测试</strong>是用来验证系统中单个机制的白盒测试（white-box test）。</p>\n<p>单元测试可以作为一种非常有价值的文档。如果想知道如何调用一个函数或者创建一个对象，会有一个测试展示给你看。测试就像一套范例，它帮助其他程序员了解如何使用代码。这份文档是可编译的、可运行的、它保持最新。它不会撒谎。</p>\n<p><strong>验收测试</strong>是用来验证系统满足客户需求的黑盒测试（black-box test）。</p>\n<p>验收测试是关于一项特性的最终文档。一旦客户编写完成了验证一项特性的验收测试，程序员可以阅读那些验收测试来真正地理解这项特性。所以，正如单元测试作为可编译、可执行的有关系统内部结构的文档那样，验收测试是有关系统特性的可以编译、可执行的文档。简而言之，验收测试是真正的需求文档。</p>\n<h3 id=\"SRP：单一职责原则\"><a href=\"#SRP：单一职责原则\" class=\"headerlink\" title=\"SRP：单一职责原则\"></a>SRP：单一职责原则</h3><p>假设有两个不同的应用程序使用Rectangle类。</p>\n<p>一个应用程序是有关计算几何学方面的，利用Rectangle类计算几何形状，但不会再屏幕上绘制矩形。</p>\n<p>另外一个应用程序实质上是有关图形绘制方面的，它可能也会进行一些计算几何方面的工作，但是它肯定会在屏幕上绘制矩形。</p>\n<p><img src=\"498627-20160828231647539-1014399922.png\" alt=\"\"></p>\n<p>此时，Rectangle类具有两个职责。第一个职责提供了一个矩形几何形状的数学模型；第二个职责是把矩形在一个图形用户界面上绘制出来。</p>\n<p>对于SRP的违反导致了一些严重的问题。首先，我们必须在计算几何应用程序中包含进GUI代码。在.Net中，就必须要把GUI组建和计算几何应用一起构建、部署。</p>\n<p>其次，如果GraphicalApplication的改变由于一些原因导致了Rectangle的改变，那么这个改变会迫使我们重新构建、测试以及部署ComputationalGeometryApplication。如果忘记这样做，ComputationalGeometryApplication可能会以不可预测的方式失败。</p>\n<p><img src=\"498627-20160828231739089-846443922.png\" alt=\"\"></p>\n<p>一个较好的设计是把这两个职责分离到两个完全不同的类中。这个设计把Rectangle类中进行计算的部分移动到了GeometricRectangle类中。现在矩形绘制方式的改变不会对ComputationalGeometryApplication类造成影响。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"测试驱动开发\"><a href=\"#测试驱动开发\" class=\"headerlink\" title=\"测试驱动开发\"></a>测试驱动开发</h3><p>简单的3条测试规则：</p>\n<ol>\n<li>除非已经编写了一个不能通过的单元测试，否则不编写任何产品代码；</li>\n<li>只要编写能够正好导致测试不通过或者编译失败的单元测试就够了，无需更多；</li>\n<li>只要编写能够正好使失败的单元测试通过的产品代码就够了，无需更多。</li>\n</ol>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p><strong>单元测试</strong>是用来验证系统中单个机制的白盒测试（white-box test）。</p>\n<p>单元测试可以作为一种非常有价值的文档。如果想知道如何调用一个函数或者创建一个对象，会有一个测试展示给你看。测试就像一套范例，它帮助其他程序员了解如何使用代码。这份文档是可编译的、可运行的、它保持最新。它不会撒谎。</p>\n<p><strong>验收测试</strong>是用来验证系统满足客户需求的黑盒测试（black-box test）。</p>\n<p>验收测试是关于一项特性的最终文档。一旦客户编写完成了验证一项特性的验收测试，程序员可以阅读那些验收测试来真正地理解这项特性。所以，正如单元测试作为可编译、可执行的有关系统内部结构的文档那样，验收测试是有关系统特性的可以编译、可执行的文档。简而言之，验收测试是真正的需求文档。</p>\n<h3 id=\"SRP：单一职责原则\"><a href=\"#SRP：单一职责原则\" class=\"headerlink\" title=\"SRP：单一职责原则\"></a>SRP：单一职责原则</h3><p>假设有两个不同的应用程序使用Rectangle类。</p>\n<p>一个应用程序是有关计算几何学方面的，利用Rectangle类计算几何形状，但不会再屏幕上绘制矩形。</p>\n<p>另外一个应用程序实质上是有关图形绘制方面的，它可能也会进行一些计算几何方面的工作，但是它肯定会在屏幕上绘制矩形。</p>\n<p><img src=\"498627-20160828231647539-1014399922.png\" alt=\"\"></p>\n<p>此时，Rectangle类具有两个职责。第一个职责提供了一个矩形几何形状的数学模型；第二个职责是把矩形在一个图形用户界面上绘制出来。</p>\n<p>对于SRP的违反导致了一些严重的问题。首先，我们必须在计算几何应用程序中包含进GUI代码。在.Net中，就必须要把GUI组建和计算几何应用一起构建、部署。</p>\n<p>其次，如果GraphicalApplication的改变由于一些原因导致了Rectangle的改变，那么这个改变会迫使我们重新构建、测试以及部署ComputationalGeometryApplication。如果忘记这样做，ComputationalGeometryApplication可能会以不可预测的方式失败。</p>\n<p><img src=\"498627-20160828231739089-846443922.png\" alt=\"\"></p>\n<p>一个较好的设计是把这两个职责分离到两个完全不同的类中。这个设计把Rectangle类中进行计算的部分移动到了GeometricRectangle类中。现在矩形绘制方式的改变不会对ComputationalGeometryApplication类造成影响。</p>\n"},{"title":"一些个人常用的网站集合","description":"<!--more-->","photos":["/2018/04/24/website/website.png"],"_content":"\n### Google\n\n[Google 代码风格指南](https://google.github.io/styleguide/)\n\n[Google 开发文档风格指南](https://developers.google.cn/style/)\n\n[Google Noto Fonts](https://www.google.com/get/noto/#sans-hans)\n\n[Google 开发者中文博客](http://developers.googleblog.cn/)\n\n[Google 开源项目风格指南 (中文版)](https://github.com/zh-google-styleguide/zh-google-styleguide)\n\n[Google Samples](https://github.com/googlesamples/?utf8=%E2%9C%93&query=)\n\n### Python\n\n[Napoleon Python 文档风格](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/)\n\n[SPHINX Python 文档转换工具](http://www.sphinx-doc.org/en/master/)\n\n### Android\n\n[Gradle](https://developer.android.com/studio/build/index.html)\n\n[Android Samples](https://developer.android.com/samples/index.html)\n\n[Android培训课程中文版](http://hukai.me/android-training-course-in-chinese/)\n\n### .NET\n\n[.NET Framework 源码](https://referencesource.microsoft.com/)\n\n[.NET 类在不同版本下的区别](https://apisof.net/catalog)\n\n[.NET Standard](https://docs.microsoft.com/zh-cn/dotnet/standard/net-standard)\n\n[.NET Core](https://github.com/dotnet/core)\n\n[nuget](https://www.nuget.org/)\n\n[.NET 在线编译器](https://dotnetfiddle.net/#)\n\n[BenchmarkDotNet](http://benchmarkdotnet.org/)\n\n### 图标\n\n[IcoMoon](https://icomoon.io/)\n\n[https://icons8.com/](https://icons8.com/)\n\n[Font Awesome](https://fontawesome.com/)\n\n### TensorFlow\n\n[从源代码安装 TensorFlow](https://www.tensorflow.org/install/install_sources)\n\n[Deep Learning 中文翻译](https://github.com/exacity/deeplearningbook-chinese)\n\n[TensorFlow 官方网址](https://www.tensorflow.org/)\n\n### 素材\n\n[https://pxhere.com/](https://pxhere.com/)\n\n### 其他\n\n[在线画图](https://go.gliffy.com/go/html5/launch)","source":"_posts/website.md","raw":"---\ntitle: 一些个人常用的网站集合\ndescription: <!--more-->\nphotos:\n - /2018/04/24/website/website.png\n---\n\n### Google\n\n[Google 代码风格指南](https://google.github.io/styleguide/)\n\n[Google 开发文档风格指南](https://developers.google.cn/style/)\n\n[Google Noto Fonts](https://www.google.com/get/noto/#sans-hans)\n\n[Google 开发者中文博客](http://developers.googleblog.cn/)\n\n[Google 开源项目风格指南 (中文版)](https://github.com/zh-google-styleguide/zh-google-styleguide)\n\n[Google Samples](https://github.com/googlesamples/?utf8=%E2%9C%93&query=)\n\n### Python\n\n[Napoleon Python 文档风格](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/)\n\n[SPHINX Python 文档转换工具](http://www.sphinx-doc.org/en/master/)\n\n### Android\n\n[Gradle](https://developer.android.com/studio/build/index.html)\n\n[Android Samples](https://developer.android.com/samples/index.html)\n\n[Android培训课程中文版](http://hukai.me/android-training-course-in-chinese/)\n\n### .NET\n\n[.NET Framework 源码](https://referencesource.microsoft.com/)\n\n[.NET 类在不同版本下的区别](https://apisof.net/catalog)\n\n[.NET Standard](https://docs.microsoft.com/zh-cn/dotnet/standard/net-standard)\n\n[.NET Core](https://github.com/dotnet/core)\n\n[nuget](https://www.nuget.org/)\n\n[.NET 在线编译器](https://dotnetfiddle.net/#)\n\n[BenchmarkDotNet](http://benchmarkdotnet.org/)\n\n### 图标\n\n[IcoMoon](https://icomoon.io/)\n\n[https://icons8.com/](https://icons8.com/)\n\n[Font Awesome](https://fontawesome.com/)\n\n### TensorFlow\n\n[从源代码安装 TensorFlow](https://www.tensorflow.org/install/install_sources)\n\n[Deep Learning 中文翻译](https://github.com/exacity/deeplearningbook-chinese)\n\n[TensorFlow 官方网址](https://www.tensorflow.org/)\n\n### 素材\n\n[https://pxhere.com/](https://pxhere.com/)\n\n### 其他\n\n[在线画图](https://go.gliffy.com/go/html5/launch)","slug":"website","published":1,"date":"2018-04-24T01:02:56.435Z","updated":"2018-04-24T07:56:22.634Z","comments":1,"layout":"post","link":"","_id":"cjgwyoan50007g8bkcvahgpn9","content":"<h3 id=\"Google\"><a href=\"#Google\" class=\"headerlink\" title=\"Google\"></a>Google</h3><p><a href=\"https://google.github.io/styleguide/\" target=\"_blank\" rel=\"noopener\">Google 代码风格指南</a></p>\n<p><a href=\"https://developers.google.cn/style/\" target=\"_blank\" rel=\"noopener\">Google 开发文档风格指南</a></p>\n<p><a href=\"https://www.google.com/get/noto/#sans-hans\" target=\"_blank\" rel=\"noopener\">Google Noto Fonts</a></p>\n<p><a href=\"http://developers.googleblog.cn/\" target=\"_blank\" rel=\"noopener\">Google 开发者中文博客</a></p>\n<p><a href=\"https://github.com/zh-google-styleguide/zh-google-styleguide\" target=\"_blank\" rel=\"noopener\">Google 开源项目风格指南 (中文版)</a></p>\n<p><a href=\"https://github.com/googlesamples/?utf8=%E2%9C%93&amp;query=\" target=\"_blank\" rel=\"noopener\">Google Samples</a></p>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><p><a href=\"https://sphinxcontrib-napoleon.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noopener\">Napoleon Python 文档风格</a></p>\n<p><a href=\"http://www.sphinx-doc.org/en/master/\" target=\"_blank\" rel=\"noopener\">SPHINX Python 文档转换工具</a></p>\n<h3 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h3><p><a href=\"https://developer.android.com/studio/build/index.html\" target=\"_blank\" rel=\"noopener\">Gradle</a></p>\n<p><a href=\"https://developer.android.com/samples/index.html\" target=\"_blank\" rel=\"noopener\">Android Samples</a></p>\n<p><a href=\"http://hukai.me/android-training-course-in-chinese/\" target=\"_blank\" rel=\"noopener\">Android培训课程中文版</a></p>\n<h3 id=\"NET\"><a href=\"#NET\" class=\"headerlink\" title=\".NET\"></a>.NET</h3><p><a href=\"https://referencesource.microsoft.com/\" target=\"_blank\" rel=\"noopener\">.NET Framework 源码</a></p>\n<p><a href=\"https://apisof.net/catalog\" target=\"_blank\" rel=\"noopener\">.NET 类在不同版本下的区别</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/standard/net-standard\" target=\"_blank\" rel=\"noopener\">.NET Standard</a></p>\n<p><a href=\"https://github.com/dotnet/core\" target=\"_blank\" rel=\"noopener\">.NET Core</a></p>\n<p><a href=\"https://www.nuget.org/\" target=\"_blank\" rel=\"noopener\">nuget</a></p>\n<p><a href=\"https://dotnetfiddle.net/#\" target=\"_blank\" rel=\"noopener\">.NET 在线编译器</a></p>\n<p><a href=\"http://benchmarkdotnet.org/\" target=\"_blank\" rel=\"noopener\">BenchmarkDotNet</a></p>\n<h3 id=\"图标\"><a href=\"#图标\" class=\"headerlink\" title=\"图标\"></a>图标</h3><p><a href=\"https://icomoon.io/\" target=\"_blank\" rel=\"noopener\">IcoMoon</a></p>\n<p><a href=\"https://icons8.com/\" target=\"_blank\" rel=\"noopener\">https://icons8.com/</a></p>\n<p><a href=\"https://fontawesome.com/\" target=\"_blank\" rel=\"noopener\">Font Awesome</a></p>\n<h3 id=\"TensorFlow\"><a href=\"#TensorFlow\" class=\"headerlink\" title=\"TensorFlow\"></a>TensorFlow</h3><p><a href=\"https://www.tensorflow.org/install/install_sources\" target=\"_blank\" rel=\"noopener\">从源代码安装 TensorFlow</a></p>\n<p><a href=\"https://github.com/exacity/deeplearningbook-chinese\" target=\"_blank\" rel=\"noopener\">Deep Learning 中文翻译</a></p>\n<p><a href=\"https://www.tensorflow.org/\" target=\"_blank\" rel=\"noopener\">TensorFlow 官方网址</a></p>\n<h3 id=\"素材\"><a href=\"#素材\" class=\"headerlink\" title=\"素材\"></a>素材</h3><p><a href=\"https://pxhere.com/\" target=\"_blank\" rel=\"noopener\">https://pxhere.com/</a></p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p><a href=\"https://go.gliffy.com/go/html5/launch\" target=\"_blank\" rel=\"noopener\">在线画图</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Google\"><a href=\"#Google\" class=\"headerlink\" title=\"Google\"></a>Google</h3><p><a href=\"https://google.github.io/styleguide/\" target=\"_blank\" rel=\"noopener\">Google 代码风格指南</a></p>\n<p><a href=\"https://developers.google.cn/style/\" target=\"_blank\" rel=\"noopener\">Google 开发文档风格指南</a></p>\n<p><a href=\"https://www.google.com/get/noto/#sans-hans\" target=\"_blank\" rel=\"noopener\">Google Noto Fonts</a></p>\n<p><a href=\"http://developers.googleblog.cn/\" target=\"_blank\" rel=\"noopener\">Google 开发者中文博客</a></p>\n<p><a href=\"https://github.com/zh-google-styleguide/zh-google-styleguide\" target=\"_blank\" rel=\"noopener\">Google 开源项目风格指南 (中文版)</a></p>\n<p><a href=\"https://github.com/googlesamples/?utf8=%E2%9C%93&amp;query=\" target=\"_blank\" rel=\"noopener\">Google Samples</a></p>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><p><a href=\"https://sphinxcontrib-napoleon.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noopener\">Napoleon Python 文档风格</a></p>\n<p><a href=\"http://www.sphinx-doc.org/en/master/\" target=\"_blank\" rel=\"noopener\">SPHINX Python 文档转换工具</a></p>\n<h3 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h3><p><a href=\"https://developer.android.com/studio/build/index.html\" target=\"_blank\" rel=\"noopener\">Gradle</a></p>\n<p><a href=\"https://developer.android.com/samples/index.html\" target=\"_blank\" rel=\"noopener\">Android Samples</a></p>\n<p><a href=\"http://hukai.me/android-training-course-in-chinese/\" target=\"_blank\" rel=\"noopener\">Android培训课程中文版</a></p>\n<h3 id=\"NET\"><a href=\"#NET\" class=\"headerlink\" title=\".NET\"></a>.NET</h3><p><a href=\"https://referencesource.microsoft.com/\" target=\"_blank\" rel=\"noopener\">.NET Framework 源码</a></p>\n<p><a href=\"https://apisof.net/catalog\" target=\"_blank\" rel=\"noopener\">.NET 类在不同版本下的区别</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/standard/net-standard\" target=\"_blank\" rel=\"noopener\">.NET Standard</a></p>\n<p><a href=\"https://github.com/dotnet/core\" target=\"_blank\" rel=\"noopener\">.NET Core</a></p>\n<p><a href=\"https://www.nuget.org/\" target=\"_blank\" rel=\"noopener\">nuget</a></p>\n<p><a href=\"https://dotnetfiddle.net/#\" target=\"_blank\" rel=\"noopener\">.NET 在线编译器</a></p>\n<p><a href=\"http://benchmarkdotnet.org/\" target=\"_blank\" rel=\"noopener\">BenchmarkDotNet</a></p>\n<h3 id=\"图标\"><a href=\"#图标\" class=\"headerlink\" title=\"图标\"></a>图标</h3><p><a href=\"https://icomoon.io/\" target=\"_blank\" rel=\"noopener\">IcoMoon</a></p>\n<p><a href=\"https://icons8.com/\" target=\"_blank\" rel=\"noopener\">https://icons8.com/</a></p>\n<p><a href=\"https://fontawesome.com/\" target=\"_blank\" rel=\"noopener\">Font Awesome</a></p>\n<h3 id=\"TensorFlow\"><a href=\"#TensorFlow\" class=\"headerlink\" title=\"TensorFlow\"></a>TensorFlow</h3><p><a href=\"https://www.tensorflow.org/install/install_sources\" target=\"_blank\" rel=\"noopener\">从源代码安装 TensorFlow</a></p>\n<p><a href=\"https://github.com/exacity/deeplearningbook-chinese\" target=\"_blank\" rel=\"noopener\">Deep Learning 中文翻译</a></p>\n<p><a href=\"https://www.tensorflow.org/\" target=\"_blank\" rel=\"noopener\">TensorFlow 官方网址</a></p>\n<h3 id=\"素材\"><a href=\"#素材\" class=\"headerlink\" title=\"素材\"></a>素材</h3><p><a href=\"https://pxhere.com/\" target=\"_blank\" rel=\"noopener\">https://pxhere.com/</a></p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p><a href=\"https://go.gliffy.com/go/html5/launch\" target=\"_blank\" rel=\"noopener\">在线画图</a></p>\n"},{"title":"Python 核心编程","date":"2018-05-05T14:06:54.000Z","photos":["/2018/05/05/pythoncore/pythoncore.png"],"出版社":"人民邮电出版社","ISBN":9787115414779,"出版时间":"2016-04-30T16:00:00.000Z","description":"<!—more—->","_content":"\n### 正则表达式\n\n#### [`re`](https://docs.python.org/3.5/library/re.html?highlight=re#module-re) — Regular expression operations\n\n>  [`re.compile`](https://docs.python.org/3.6/library/re.html?highlight=re#re.compile) 为正则表达式提供了预编译功能。如果程序在执行过程中需要多次调用到正则表达式对象，那么采用预编译可以提升执行性能。\n\nIf you want to locate a match anywhere in *string*, use [`search()`](https://docs.python.org/3.6/library/re.html?highlight=re#re.regex.search) instead (see also [search() vs. match()](https://docs.python.org/3.6/library/re.html?highlight=re#search-vs-match)).\n\n### 网络编程\n\n#### [socket](https://docs.python.org/3.6/library/socket.html?highlight=socket#module-socket) - 低级网络接口\n\n1. 基于文件的 Socket：[`socket.AF_UNIX`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_UNIX)\n2. 基于网络的 Socket：[`socket.AF_INET`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_INET)\n\n\n1. 有链接的Socket(**TCP**)：[`socket.SOCK_STREAM`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_STREAM)\n2. 无链接的Socket(**UDP**)：[`socket.SOCK_DGRAM`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_DGRAM)\n\n`tcpSock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)`\n\n**TCP服务端和客户端示例**\n\n{% codeblock 服务端 tsTserv3.py lang:python %}\nfrom socket import *\nfrom time import ctime\n\nHOST = ''\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcpSerSock = socket(AF_INET, SOCK_STREAM)\ntcpSerSock.bind(ADDR)\ntcpSerSock.listen(5)\n\nwhile True:\n    print('waiting for connection...')\n    tcpCliSock, addr = tcpSerSock.accept()\n    print('...connected from:', addr)\n\n    while True:\n        data = tcpCliSock.recv(BUFSIZ)\n        if not data:\n            break\n        #tcpCliSock.send('[%s] %s' % (bytes(ctime(), 'utf-8'), data))\n        tcpCliSock.send(bytes('[%s] %s' % (ctime(), data.decode('utf-8')), 'utf-8'))\n    \n    tcpCliSock.close()\ntcpSerSock.close()\n{% endcodeblock %}\n\n{% codeblock 客户端 tsTclnt3.py lang:python %}\nfrom socket import *\n\nHOST = '127.0.0.1'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcpCliSock = socket(AF_INET, SOCK_STREAM)\ntcpCliSock.connect(ADDR)\n\nwhile True:\n    data = input('> ')\n    if not data:\n        break\n    tcpCliSock.send(bytes(data, 'utf-8'))\n    data = tcpCliSock.recv(BUFSIZ)\n    if not data:\n        break\n    print(data.decode('utf-8'))\n\ntcpCliSock.close()\n{% endcodeblock %}\n\n**执行 TCP 服务端和客户端**\n\n服务端输出如下：\n\n```\nwaiting for connection...\n...connected from: ('127.0.0.1', 57223)\n```\n\n客户端输入及输出如下：\n\n```\n> hi\n[Mon May  7 20:05:26 2018] hi\n> spanish\n[Mon May  7 20:05:33 2018] spanish\n> \n```\n\n#### [`socketserver`](https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#module-socketserver) - 网络服务框架\n\n**[Examples](https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#examples)**\n\n#### [`asyncore`](https://docs.python.org/3.6/library/asyncore.html?highlight=asyncore#module-asyncore) / [`asynchat`](https://docs.python.org/3.6/library/asynchat.html#module-asynchat) - 异步 socket 处理器\n\n#### [`select`](https://docs.python.org/3.6/library/select.html?highlight=select#module-select) / [`selectors`](https://docs.python.org/3.6/library/selectors.html#module-selectors)\n\n> Note that on Windows, it only works for sockets;\n>\n> The [`selectors`](https://docs.python.org/3.6/library/selectors.html#module-selectors) module allows high-level and efficient I/O multiplexing, built upon the[`select`](https://docs.python.org/3.6/library/select.html?highlight=select#module-select) module primitives. Users are encouraged to use the [`selectors`](https://docs.python.org/3.6/library/selectors.html#module-selectors) module instead\n\n### 因特网客户端编程\n\n#### [`http`](https://docs.python.org/3.5/library/http.html#module-http) — HTTP 包\n\n> Python3.0起，原 `httplib` 模块被并入 `http` 包中。\n\n- [`http.client`](https://docs.python.org/3.5/library/http.client.html#module-http.client) 低级 HTTP 协议客户端; 高级 HTTP 协议客户端使用 [`urllib.request`](https://docs.python.org/3.5/library/urllib.request.html#module-urllib.request)\n- [`http.server`](https://docs.python.org/3.5/library/http.server.html#module-http.server) 基于 [`socketserver`](https://docs.python.org/3.5/library/socketserver.html#module-socketserver) 的基础 HTTP 服务端类\n- [`http.cookies`](https://docs.python.org/3.5/library/http.cookies.html#module-http.cookies) 使用cookie实施状态管理的实用程序\n- [`http.cookiejar`](https://docs.python.org/3.5/library/http.cookiejar.html#module-http.cookiejar) 提供cookie的持久性\n\n#### [`ftplib`](https://docs.python.org/3.6/library/ftplib.html?highlight=ftplib#module-ftplib) - FTP 协议客户端\n\n```\n>>> from ftplib import FTP\n>>> ftp = FTP('ftp.debian.org')     # connect to host, default port\n>>> ftp.login()                     # user anonymous, passwd anonymous@\n'230 Login successful.'\n>>> ftp.cwd('debian')               # change into \"debian\" directory\n>>> ftp.retrlines('LIST')           # list directory contents\n-rw-rw-r--    1 1176     1176         1063 Jun 15 10:18 README\n...\ndrwxr-sr-x    5 1176     1176         4096 Dec 19  2000 pool\ndrwxr-sr-x    4 1176     1176         4096 Nov 17  2008 project\ndrwxr-xr-x    3 1176     1176         4096 Oct 10  2012 tools\n'226 Directory send OK.'\n>>> ftp.retrbinary('RETR README', open('README', 'wb').write)\n'226 Transfer complete.'\n>>> ftp.quit()\n```\n{% blockquote 主动和被动模式 https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#%E4%B8%BB%E5%8A%A8%E5%92%8C%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F 文件传输协议 %}\n\n主动模式要求客户端和服务器端同时打开并且监听一个端口以创建连接。在这种情况下，客户端由于安装了防火墙会产生一些问题。所以，创立了被动模式。被动模式只要求服务器端产生一个监听相应端口的进程，这样就可以绕过客户端安装了防火墙的问题。\n\n{% endblockquote %}\n\n> 从 Python2.1开始，默认为**被动模式**。\n\n#### [`nntplib`](https://docs.python.org/3.6/library/nntplib.html?highlight=nntp#module-nntplib) - [网络新闻传输协议](https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E6%96%B0%E8%81%9E%E5%82%B3%E8%BC%B8%E5%8D%94%E5%AE%9A)\n\n#### [`smtplib`](https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#module-smtplib) - SMTP 协议客户端\n\n```\n>>> from smtplib import SMTP\n>>> with SMTP(\"domain.org\") as smtp:\n...     smtp.noop()\n...\n(250, b'Ok')\n>>>\n```\n\n**[`SMTP Objects`](https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-objects)** [Example](https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-example)\n\n```python\nimport smtplib\n\ndef prompt(prompt):\n    return input(prompt).strip()\n\nfromaddr = prompt(\"From: \")\ntoaddrs  = prompt(\"To: \").split()\nprint(\"Enter message, end with ^D (Unix) or ^Z (Windows):\")\n\n# Add the From: and To: headers at the start!\nmsg = (\"From: %s\\r\\nTo: %s\\r\\n\\r\\n\"\n       % (fromaddr, \", \".join(toaddrs)))\nwhile True:\n    try:\n        line = input()\n    except EOFError:\n        break\n    if not line:\n        break\n    msg = msg + line\n\nprint(\"Message length is\", len(msg))\n\nserver = smtplib.SMTP('localhost')\nserver.set_debuglevel(1)\nserver.sendmail(fromaddr, toaddrs, msg)\nserver.quit()\n```\n\n#### [郵局協议（Post Office Protocol，简称 POP）](https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A)\n\n{% blockquote 邮局协议 https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A %}\n\nPOP支持离线邮件处理。其具体过程是：邮件发送到服务器上，电子邮件客户端调用邮件客户机程序以连接服务器，并下载所有未阅读的电子邮件。这种离线访问模式是一种存储转发服务，将邮件从邮件服务器端送到个人终端机器上，一般是PC机或MAC。一旦邮件发送到PC机或MAC上，邮件服务器上的邮件将会被删除。但目前的POP3邮件服务器大都可以“只下载邮件，服务器端并不删除”，也就是改进的POP3协议。\n\n{% endblockquote %}\n\n##### [`poplib`](https://docs.python.org/3.6/library/poplib.html?highlight=poplib#module-poplib) - POP3 协议客户端\n\n[`POP3 Objects`](https://docs.python.org/3.6/library/poplib.html?highlight=poplib#pop3-objects)\n\n```python\nimport getpass, poplib\n\nM = poplib.POP3('localhost')\nM.user(getpass.getuser())\nM.pass_(getpass.getpass())\nnumMessages = len(M.list()[1])\nfor i in range(numMessages):\n    for j in M.retr(i+1)[1]:\n        print(j)\n```\n\n#### [因特网信息访问协议（缩写为 IMAP，以前称作 交互邮件访问协议）](https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE)\n\n{% blockquote 因特网信息访问协议 https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE %}\n\n因特网信息访问协议（缩写为IMAP，以前称作交互邮件访问协议）是一个应用层协议，用来从本地邮件客户端（如Microsoft Outlook、Outlook Express、Foxmail、Mozilla Thunderbird）访问远程服务器上的邮件。\n\nIMAP和POP3（Post Office Protocol - Version 3，邮局协议第三版）是邮件访问最为普遍的Internet标准协议。事实上所有现代的邮件客户端和服务器都对两者给予支持。IMAP现在的版本是“IMAP第四版第一次修订版”（IMAP4rev1），在 RFC 3501 中定义。\n\n{% endblockquote %}\n\n##### [`imaplib`](https://docs.python.org/3.6/library/imaplib.html#module-imaplib) — IMAP4 协议客户端\n\n[`IMAP4 Objects`](https://docs.python.org/3.6/library/imaplib.html#imap4-objects)\n\n```python\nimport getpass, imaplib\n\nM = imaplib.IMAP4()\nM.login(getpass.getuser(), getpass.getpass())\nM.select()\ntyp, data = M.search(None, 'ALL')\nfor num in data[0].split():\n    typ, data = M.fetch(num, '(RFC822)')\n    print('Message %s\\n%s\\n' % (num, data[0][1]))\nM.close()\nM.logout()\n```\n\n#### [`email`](https://docs.python.org/3.6/library/email.html?highlight=email#module-email) - An email and MIME handling package\n\n#### [`smtpd`](https://docs.python.org/3.6/library/smtpd.html?highlight=smtpd#module-smtpd) - SMTP 服务端\n\n#### [`base64`](https://docs.python.org/3.6/library/base64.html?highlight=base64#module-base64) - Base16, Base32, Base64, Base85 Data Encodings\n\n#### [`mimetypes`](https://docs.python.org/3.6/library/mimetypes.html?highlight=mimetypes#module-mimetypes) - Map filenames to MIME types\n\n{% blockquote 互联网媒体类型 https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B %}\n\n互联网媒体类型（Internet media type，也称为MIME类型（MIME type）或内容类型（content type））是给互联网上传输的内容赋予的分类类型。一份内容的互联网媒体类型是由其文件格式与内容决定的。互联网媒体类型与文件拓展名相对应，因此计算机系统常常通过拓展名来确定一个文件的媒体类型并决定与其相关联的软件。互联网媒体类型的分类标准由互联网号码分配局（IANA）发布。1996年十一月，媒体类型在RFC 2045中被最初定义，当时仅被使用在SMTP协议的电子邮件中。现在其他的协议（比如HTTP或者SIP）也都常使用MIME类型。 一个MIME类型至少包括两个部分：一个类型（type）和一个子类型（subtype）。此外，它还可能包括一个或多个可选参数（optional parameter）。比如，HTML文件的互联网媒体类型可能是\n\ntext/html; charset = UTF-8\n\n在这个例子中，文件类型为text，子类型为html，而charset是一个可选参数，其值为UTF-8。\n\n{% endblockquote %}\n\n#### [`binascii`](https://docs.python.org/3.6/library/binascii.html?highlight=binascii#module-binascii) - Convert between binary and ASCII\n\n#### [`binhex`](https://docs.python.org/3.6/library/binhex.html?highlight=binhex#module-binhex) - Encode and decode binhex4 files\n\n#### [`quopri`](https://docs.python.org/3.6/library/quopri.html#module-quopri) - Encode and decode MIME quoted-printable data\n\n### 多线程编程\n\n#### [`_thread`](https://docs.python.org/3.6/library/_thread.html#module-_thread) - 低级线程 API\n\n#### [`threading`](https://docs.python.org/3.6/library/threading.html#module-threading) - 基于 `_thread` 的高级线程接口\n\n> `threading`模块支持守护线程([`daemon`](https://docs.python.org/3.6/library/threading.html?highlight=daemon#threading.Thread.daemon) thread)，其工作方式是：守护线程一般是一个等待客户端请求服务的服务器。如果没有客户端请求，守护线程就是空闲的。如果把一个线程设置为守护线程，就表示这个线程是**不重要的**，进程退出时不需要等待这个线程执行完成。\n>\n> 如果主线程准备退出时，不需要等待某些子线程完成，就可以为这些子线程设置守护线程标记。\n\n##### 创建 Thread 实例，传给它一个函数\n\n```python\nimport threading\nfrom time import sleep, ctime\n\nloops = [4, 2]\n\n\ndef loop(nloop, nsec):\n    print('start loop', nloop, 'at:', ctime())\n    sleep(nsec)\n    print('loop', nloop, 'done at:', ctime())\n\n\ndef main():\n    print('starting at:', ctime())\n    threads = []\n    nloops = list(range(len(loops)))\n\n    for i in nloops:\n        t = threading.Thread(target=loop,\n                             args=(i, loops[i]))\n        threads.append(t)\n\n    for i in nloops:  # start threads\n        threads[i].start()\n\n    for i in nloops:  # wait for all\n        threads[i].join()  # threads to finish\n\n    print('all DONE at:', ctime())\n\n\nif __name__ == '__main__':\n    main()\n```\n\n当所有线程都被分配完毕后，通过调用每个线程的 `start()` 方法让它们开始执行，而不是在这之前就会执行。\n\n`join()` 方法将等待线程结束，或者在提供了超时时间的情况下，达到超时时间。一旦线程启动，它们就会一直执行，知道给定的函数完成之后退出。如果主线程还有其他事情要做，而不是等待某些线程完成，就可以不调用 `join()` 。 `join()` 方法只有在需要等待线程完成的时候才是有用的。\n\n\n\n","source":"_posts/pythoncore.md","raw":"---\ntitle: Python 核心编程\ndate: 2018-05-05 22:06:54\ntags:\n - 编程\n - Python\nphotos:\n - /2018/05/05/pythoncore/pythoncore.png\ncategories:\n - 编程\n - Python\n出版社: 人民邮电出版社\nISBN: 9787115414779\n出版时间: 2016-05-01\ndescription: <!—more—->\n---\n\n### 正则表达式\n\n#### [`re`](https://docs.python.org/3.5/library/re.html?highlight=re#module-re) — Regular expression operations\n\n>  [`re.compile`](https://docs.python.org/3.6/library/re.html?highlight=re#re.compile) 为正则表达式提供了预编译功能。如果程序在执行过程中需要多次调用到正则表达式对象，那么采用预编译可以提升执行性能。\n\nIf you want to locate a match anywhere in *string*, use [`search()`](https://docs.python.org/3.6/library/re.html?highlight=re#re.regex.search) instead (see also [search() vs. match()](https://docs.python.org/3.6/library/re.html?highlight=re#search-vs-match)).\n\n### 网络编程\n\n#### [socket](https://docs.python.org/3.6/library/socket.html?highlight=socket#module-socket) - 低级网络接口\n\n1. 基于文件的 Socket：[`socket.AF_UNIX`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_UNIX)\n2. 基于网络的 Socket：[`socket.AF_INET`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_INET)\n\n\n1. 有链接的Socket(**TCP**)：[`socket.SOCK_STREAM`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_STREAM)\n2. 无链接的Socket(**UDP**)：[`socket.SOCK_DGRAM`](https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_DGRAM)\n\n`tcpSock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)`\n\n**TCP服务端和客户端示例**\n\n{% codeblock 服务端 tsTserv3.py lang:python %}\nfrom socket import *\nfrom time import ctime\n\nHOST = ''\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcpSerSock = socket(AF_INET, SOCK_STREAM)\ntcpSerSock.bind(ADDR)\ntcpSerSock.listen(5)\n\nwhile True:\n    print('waiting for connection...')\n    tcpCliSock, addr = tcpSerSock.accept()\n    print('...connected from:', addr)\n\n    while True:\n        data = tcpCliSock.recv(BUFSIZ)\n        if not data:\n            break\n        #tcpCliSock.send('[%s] %s' % (bytes(ctime(), 'utf-8'), data))\n        tcpCliSock.send(bytes('[%s] %s' % (ctime(), data.decode('utf-8')), 'utf-8'))\n    \n    tcpCliSock.close()\ntcpSerSock.close()\n{% endcodeblock %}\n\n{% codeblock 客户端 tsTclnt3.py lang:python %}\nfrom socket import *\n\nHOST = '127.0.0.1'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcpCliSock = socket(AF_INET, SOCK_STREAM)\ntcpCliSock.connect(ADDR)\n\nwhile True:\n    data = input('> ')\n    if not data:\n        break\n    tcpCliSock.send(bytes(data, 'utf-8'))\n    data = tcpCliSock.recv(BUFSIZ)\n    if not data:\n        break\n    print(data.decode('utf-8'))\n\ntcpCliSock.close()\n{% endcodeblock %}\n\n**执行 TCP 服务端和客户端**\n\n服务端输出如下：\n\n```\nwaiting for connection...\n...connected from: ('127.0.0.1', 57223)\n```\n\n客户端输入及输出如下：\n\n```\n> hi\n[Mon May  7 20:05:26 2018] hi\n> spanish\n[Mon May  7 20:05:33 2018] spanish\n> \n```\n\n#### [`socketserver`](https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#module-socketserver) - 网络服务框架\n\n**[Examples](https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#examples)**\n\n#### [`asyncore`](https://docs.python.org/3.6/library/asyncore.html?highlight=asyncore#module-asyncore) / [`asynchat`](https://docs.python.org/3.6/library/asynchat.html#module-asynchat) - 异步 socket 处理器\n\n#### [`select`](https://docs.python.org/3.6/library/select.html?highlight=select#module-select) / [`selectors`](https://docs.python.org/3.6/library/selectors.html#module-selectors)\n\n> Note that on Windows, it only works for sockets;\n>\n> The [`selectors`](https://docs.python.org/3.6/library/selectors.html#module-selectors) module allows high-level and efficient I/O multiplexing, built upon the[`select`](https://docs.python.org/3.6/library/select.html?highlight=select#module-select) module primitives. Users are encouraged to use the [`selectors`](https://docs.python.org/3.6/library/selectors.html#module-selectors) module instead\n\n### 因特网客户端编程\n\n#### [`http`](https://docs.python.org/3.5/library/http.html#module-http) — HTTP 包\n\n> Python3.0起，原 `httplib` 模块被并入 `http` 包中。\n\n- [`http.client`](https://docs.python.org/3.5/library/http.client.html#module-http.client) 低级 HTTP 协议客户端; 高级 HTTP 协议客户端使用 [`urllib.request`](https://docs.python.org/3.5/library/urllib.request.html#module-urllib.request)\n- [`http.server`](https://docs.python.org/3.5/library/http.server.html#module-http.server) 基于 [`socketserver`](https://docs.python.org/3.5/library/socketserver.html#module-socketserver) 的基础 HTTP 服务端类\n- [`http.cookies`](https://docs.python.org/3.5/library/http.cookies.html#module-http.cookies) 使用cookie实施状态管理的实用程序\n- [`http.cookiejar`](https://docs.python.org/3.5/library/http.cookiejar.html#module-http.cookiejar) 提供cookie的持久性\n\n#### [`ftplib`](https://docs.python.org/3.6/library/ftplib.html?highlight=ftplib#module-ftplib) - FTP 协议客户端\n\n```\n>>> from ftplib import FTP\n>>> ftp = FTP('ftp.debian.org')     # connect to host, default port\n>>> ftp.login()                     # user anonymous, passwd anonymous@\n'230 Login successful.'\n>>> ftp.cwd('debian')               # change into \"debian\" directory\n>>> ftp.retrlines('LIST')           # list directory contents\n-rw-rw-r--    1 1176     1176         1063 Jun 15 10:18 README\n...\ndrwxr-sr-x    5 1176     1176         4096 Dec 19  2000 pool\ndrwxr-sr-x    4 1176     1176         4096 Nov 17  2008 project\ndrwxr-xr-x    3 1176     1176         4096 Oct 10  2012 tools\n'226 Directory send OK.'\n>>> ftp.retrbinary('RETR README', open('README', 'wb').write)\n'226 Transfer complete.'\n>>> ftp.quit()\n```\n{% blockquote 主动和被动模式 https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#%E4%B8%BB%E5%8A%A8%E5%92%8C%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F 文件传输协议 %}\n\n主动模式要求客户端和服务器端同时打开并且监听一个端口以创建连接。在这种情况下，客户端由于安装了防火墙会产生一些问题。所以，创立了被动模式。被动模式只要求服务器端产生一个监听相应端口的进程，这样就可以绕过客户端安装了防火墙的问题。\n\n{% endblockquote %}\n\n> 从 Python2.1开始，默认为**被动模式**。\n\n#### [`nntplib`](https://docs.python.org/3.6/library/nntplib.html?highlight=nntp#module-nntplib) - [网络新闻传输协议](https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E6%96%B0%E8%81%9E%E5%82%B3%E8%BC%B8%E5%8D%94%E5%AE%9A)\n\n#### [`smtplib`](https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#module-smtplib) - SMTP 协议客户端\n\n```\n>>> from smtplib import SMTP\n>>> with SMTP(\"domain.org\") as smtp:\n...     smtp.noop()\n...\n(250, b'Ok')\n>>>\n```\n\n**[`SMTP Objects`](https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-objects)** [Example](https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-example)\n\n```python\nimport smtplib\n\ndef prompt(prompt):\n    return input(prompt).strip()\n\nfromaddr = prompt(\"From: \")\ntoaddrs  = prompt(\"To: \").split()\nprint(\"Enter message, end with ^D (Unix) or ^Z (Windows):\")\n\n# Add the From: and To: headers at the start!\nmsg = (\"From: %s\\r\\nTo: %s\\r\\n\\r\\n\"\n       % (fromaddr, \", \".join(toaddrs)))\nwhile True:\n    try:\n        line = input()\n    except EOFError:\n        break\n    if not line:\n        break\n    msg = msg + line\n\nprint(\"Message length is\", len(msg))\n\nserver = smtplib.SMTP('localhost')\nserver.set_debuglevel(1)\nserver.sendmail(fromaddr, toaddrs, msg)\nserver.quit()\n```\n\n#### [郵局協议（Post Office Protocol，简称 POP）](https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A)\n\n{% blockquote 邮局协议 https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A %}\n\nPOP支持离线邮件处理。其具体过程是：邮件发送到服务器上，电子邮件客户端调用邮件客户机程序以连接服务器，并下载所有未阅读的电子邮件。这种离线访问模式是一种存储转发服务，将邮件从邮件服务器端送到个人终端机器上，一般是PC机或MAC。一旦邮件发送到PC机或MAC上，邮件服务器上的邮件将会被删除。但目前的POP3邮件服务器大都可以“只下载邮件，服务器端并不删除”，也就是改进的POP3协议。\n\n{% endblockquote %}\n\n##### [`poplib`](https://docs.python.org/3.6/library/poplib.html?highlight=poplib#module-poplib) - POP3 协议客户端\n\n[`POP3 Objects`](https://docs.python.org/3.6/library/poplib.html?highlight=poplib#pop3-objects)\n\n```python\nimport getpass, poplib\n\nM = poplib.POP3('localhost')\nM.user(getpass.getuser())\nM.pass_(getpass.getpass())\nnumMessages = len(M.list()[1])\nfor i in range(numMessages):\n    for j in M.retr(i+1)[1]:\n        print(j)\n```\n\n#### [因特网信息访问协议（缩写为 IMAP，以前称作 交互邮件访问协议）](https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE)\n\n{% blockquote 因特网信息访问协议 https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE %}\n\n因特网信息访问协议（缩写为IMAP，以前称作交互邮件访问协议）是一个应用层协议，用来从本地邮件客户端（如Microsoft Outlook、Outlook Express、Foxmail、Mozilla Thunderbird）访问远程服务器上的邮件。\n\nIMAP和POP3（Post Office Protocol - Version 3，邮局协议第三版）是邮件访问最为普遍的Internet标准协议。事实上所有现代的邮件客户端和服务器都对两者给予支持。IMAP现在的版本是“IMAP第四版第一次修订版”（IMAP4rev1），在 RFC 3501 中定义。\n\n{% endblockquote %}\n\n##### [`imaplib`](https://docs.python.org/3.6/library/imaplib.html#module-imaplib) — IMAP4 协议客户端\n\n[`IMAP4 Objects`](https://docs.python.org/3.6/library/imaplib.html#imap4-objects)\n\n```python\nimport getpass, imaplib\n\nM = imaplib.IMAP4()\nM.login(getpass.getuser(), getpass.getpass())\nM.select()\ntyp, data = M.search(None, 'ALL')\nfor num in data[0].split():\n    typ, data = M.fetch(num, '(RFC822)')\n    print('Message %s\\n%s\\n' % (num, data[0][1]))\nM.close()\nM.logout()\n```\n\n#### [`email`](https://docs.python.org/3.6/library/email.html?highlight=email#module-email) - An email and MIME handling package\n\n#### [`smtpd`](https://docs.python.org/3.6/library/smtpd.html?highlight=smtpd#module-smtpd) - SMTP 服务端\n\n#### [`base64`](https://docs.python.org/3.6/library/base64.html?highlight=base64#module-base64) - Base16, Base32, Base64, Base85 Data Encodings\n\n#### [`mimetypes`](https://docs.python.org/3.6/library/mimetypes.html?highlight=mimetypes#module-mimetypes) - Map filenames to MIME types\n\n{% blockquote 互联网媒体类型 https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B %}\n\n互联网媒体类型（Internet media type，也称为MIME类型（MIME type）或内容类型（content type））是给互联网上传输的内容赋予的分类类型。一份内容的互联网媒体类型是由其文件格式与内容决定的。互联网媒体类型与文件拓展名相对应，因此计算机系统常常通过拓展名来确定一个文件的媒体类型并决定与其相关联的软件。互联网媒体类型的分类标准由互联网号码分配局（IANA）发布。1996年十一月，媒体类型在RFC 2045中被最初定义，当时仅被使用在SMTP协议的电子邮件中。现在其他的协议（比如HTTP或者SIP）也都常使用MIME类型。 一个MIME类型至少包括两个部分：一个类型（type）和一个子类型（subtype）。此外，它还可能包括一个或多个可选参数（optional parameter）。比如，HTML文件的互联网媒体类型可能是\n\ntext/html; charset = UTF-8\n\n在这个例子中，文件类型为text，子类型为html，而charset是一个可选参数，其值为UTF-8。\n\n{% endblockquote %}\n\n#### [`binascii`](https://docs.python.org/3.6/library/binascii.html?highlight=binascii#module-binascii) - Convert between binary and ASCII\n\n#### [`binhex`](https://docs.python.org/3.6/library/binhex.html?highlight=binhex#module-binhex) - Encode and decode binhex4 files\n\n#### [`quopri`](https://docs.python.org/3.6/library/quopri.html#module-quopri) - Encode and decode MIME quoted-printable data\n\n### 多线程编程\n\n#### [`_thread`](https://docs.python.org/3.6/library/_thread.html#module-_thread) - 低级线程 API\n\n#### [`threading`](https://docs.python.org/3.6/library/threading.html#module-threading) - 基于 `_thread` 的高级线程接口\n\n> `threading`模块支持守护线程([`daemon`](https://docs.python.org/3.6/library/threading.html?highlight=daemon#threading.Thread.daemon) thread)，其工作方式是：守护线程一般是一个等待客户端请求服务的服务器。如果没有客户端请求，守护线程就是空闲的。如果把一个线程设置为守护线程，就表示这个线程是**不重要的**，进程退出时不需要等待这个线程执行完成。\n>\n> 如果主线程准备退出时，不需要等待某些子线程完成，就可以为这些子线程设置守护线程标记。\n\n##### 创建 Thread 实例，传给它一个函数\n\n```python\nimport threading\nfrom time import sleep, ctime\n\nloops = [4, 2]\n\n\ndef loop(nloop, nsec):\n    print('start loop', nloop, 'at:', ctime())\n    sleep(nsec)\n    print('loop', nloop, 'done at:', ctime())\n\n\ndef main():\n    print('starting at:', ctime())\n    threads = []\n    nloops = list(range(len(loops)))\n\n    for i in nloops:\n        t = threading.Thread(target=loop,\n                             args=(i, loops[i]))\n        threads.append(t)\n\n    for i in nloops:  # start threads\n        threads[i].start()\n\n    for i in nloops:  # wait for all\n        threads[i].join()  # threads to finish\n\n    print('all DONE at:', ctime())\n\n\nif __name__ == '__main__':\n    main()\n```\n\n当所有线程都被分配完毕后，通过调用每个线程的 `start()` 方法让它们开始执行，而不是在这之前就会执行。\n\n`join()` 方法将等待线程结束，或者在提供了超时时间的情况下，达到超时时间。一旦线程启动，它们就会一直执行，知道给定的函数完成之后退出。如果主线程还有其他事情要做，而不是等待某些线程完成，就可以不调用 `join()` 。 `join()` 方法只有在需要等待线程完成的时候才是有用的。\n\n\n\n","slug":"pythoncore","published":1,"updated":"2018-05-08T00:47:36.534Z","comments":1,"layout":"post","link":"","_id":"cjgwyob0n000sg8bkesy4whei","content":"<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><h4 id=\"re-—-Regular-expression-operations\"><a href=\"#re-—-Regular-expression-operations\" class=\"headerlink\" title=\"re — Regular expression operations\"></a><a href=\"https://docs.python.org/3.5/library/re.html?highlight=re#module-re\" target=\"_blank\" rel=\"noopener\"><code>re</code></a> — Regular expression operations</h4><blockquote>\n<p> <a href=\"https://docs.python.org/3.6/library/re.html?highlight=re#re.compile\" target=\"_blank\" rel=\"noopener\"><code>re.compile</code></a> 为正则表达式提供了预编译功能。如果程序在执行过程中需要多次调用到正则表达式对象，那么采用预编译可以提升执行性能。</p>\n</blockquote>\n<p>If you want to locate a match anywhere in <em>string</em>, use <a href=\"https://docs.python.org/3.6/library/re.html?highlight=re#re.regex.search\" target=\"_blank\" rel=\"noopener\"><code>search()</code></a> instead (see also <a href=\"https://docs.python.org/3.6/library/re.html?highlight=re#search-vs-match\" target=\"_blank\" rel=\"noopener\">search() vs. match()</a>).</p>\n<h3 id=\"网络编程\"><a href=\"#网络编程\" class=\"headerlink\" title=\"网络编程\"></a>网络编程</h3><h4 id=\"socket-低级网络接口\"><a href=\"#socket-低级网络接口\" class=\"headerlink\" title=\"socket - 低级网络接口\"></a><a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#module-socket\" target=\"_blank\" rel=\"noopener\">socket</a> - 低级网络接口</h4><ol>\n<li>基于文件的 Socket：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_UNIX\" target=\"_blank\" rel=\"noopener\"><code>socket.AF_UNIX</code></a></li>\n<li>基于网络的 Socket：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_INET\" target=\"_blank\" rel=\"noopener\"><code>socket.AF_INET</code></a></li>\n</ol>\n<ol>\n<li>有链接的Socket(<strong>TCP</strong>)：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_STREAM\" target=\"_blank\" rel=\"noopener\"><code>socket.SOCK_STREAM</code></a></li>\n<li>无链接的Socket(<strong>UDP</strong>)：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_DGRAM\" target=\"_blank\" rel=\"noopener\"><code>socket.SOCK_DGRAM</code></a></li>\n</ol>\n<p><code>tcpSock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</code></p>\n<p><strong>TCP服务端和客户端示例</strong></p>\n<figure class=\"highlight python\"><figcaption><span>服务端 tsTserv3.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> socket <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> ctime</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">''</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcpSerSock = socket(AF_INET, SOCK_STREAM)</span><br><span class=\"line\">tcpSerSock.bind(ADDR)</span><br><span class=\"line\">tcpSerSock.listen(<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'waiting for connection...'</span>)</span><br><span class=\"line\">    tcpCliSock, addr = tcpSerSock.accept()</span><br><span class=\"line\">    print(<span class=\"string\">'...connected from:'</span>, addr)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcpCliSock.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">#tcpCliSock.send('[%s] %s' % (bytes(ctime(), 'utf-8'), data))</span></span><br><span class=\"line\">        tcpCliSock.send(bytes(<span class=\"string\">'[%s] %s'</span> % (ctime(), data.decode(<span class=\"string\">'utf-8'</span>)), <span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">    tcpCliSock.close()</span><br><span class=\"line\">tcpSerSock.close()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><figcaption><span>客户端 tsTclnt3.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> socket <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcpCliSock = socket(AF_INET, SOCK_STREAM)</span><br><span class=\"line\">tcpCliSock.connect(ADDR)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    data = input(<span class=\"string\">'&gt; '</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    tcpCliSock.send(bytes(data, <span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    data = tcpCliSock.recv(BUFSIZ)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    print(data.decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">tcpCliSock.close()</span><br></pre></td></tr></table></figure>\n<p><strong>执行 TCP 服务端和客户端</strong></p>\n<p>服务端输出如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">waiting for connection...</span><br><span class=\"line\">...connected from: (&apos;127.0.0.1&apos;, 57223)</span><br></pre></td></tr></table></figure>\n<p>客户端输入及输出如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; hi</span><br><span class=\"line\">[Mon May  7 20:05:26 2018] hi</span><br><span class=\"line\">&gt; spanish</span><br><span class=\"line\">[Mon May  7 20:05:33 2018] spanish</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"socketserver-网络服务框架\"><a href=\"#socketserver-网络服务框架\" class=\"headerlink\" title=\"socketserver - 网络服务框架\"></a><a href=\"https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#module-socketserver\" target=\"_blank\" rel=\"noopener\"><code>socketserver</code></a> - 网络服务框架</h4><p><strong><a href=\"https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#examples\" target=\"_blank\" rel=\"noopener\">Examples</a></strong></p>\n<h4 id=\"asyncore-asynchat-异步-socket-处理器\"><a href=\"#asyncore-asynchat-异步-socket-处理器\" class=\"headerlink\" title=\"asyncore / asynchat - 异步 socket 处理器\"></a><a href=\"https://docs.python.org/3.6/library/asyncore.html?highlight=asyncore#module-asyncore\" target=\"_blank\" rel=\"noopener\"><code>asyncore</code></a> / <a href=\"https://docs.python.org/3.6/library/asynchat.html#module-asynchat\" target=\"_blank\" rel=\"noopener\"><code>asynchat</code></a> - 异步 socket 处理器</h4><h4 id=\"select-selectors\"><a href=\"#select-selectors\" class=\"headerlink\" title=\"select / selectors\"></a><a href=\"https://docs.python.org/3.6/library/select.html?highlight=select#module-select\" target=\"_blank\" rel=\"noopener\"><code>select</code></a> / <a href=\"https://docs.python.org/3.6/library/selectors.html#module-selectors\" target=\"_blank\" rel=\"noopener\"><code>selectors</code></a></h4><blockquote>\n<p>Note that on Windows, it only works for sockets;</p>\n<p>The <a href=\"https://docs.python.org/3.6/library/selectors.html#module-selectors\" target=\"_blank\" rel=\"noopener\"><code>selectors</code></a> module allows high-level and efficient I/O multiplexing, built upon the<a href=\"https://docs.python.org/3.6/library/select.html?highlight=select#module-select\" target=\"_blank\" rel=\"noopener\"><code>select</code></a> module primitives. Users are encouraged to use the <a href=\"https://docs.python.org/3.6/library/selectors.html#module-selectors\" target=\"_blank\" rel=\"noopener\"><code>selectors</code></a> module instead</p>\n</blockquote>\n<h3 id=\"因特网客户端编程\"><a href=\"#因特网客户端编程\" class=\"headerlink\" title=\"因特网客户端编程\"></a>因特网客户端编程</h3><h4 id=\"http-—-HTTP-包\"><a href=\"#http-—-HTTP-包\" class=\"headerlink\" title=\"http — HTTP 包\"></a><a href=\"https://docs.python.org/3.5/library/http.html#module-http\" target=\"_blank\" rel=\"noopener\"><code>http</code></a> — HTTP 包</h4><blockquote>\n<p>Python3.0起，原 <code>httplib</code> 模块被并入 <code>http</code> 包中。</p>\n</blockquote>\n<ul>\n<li><a href=\"https://docs.python.org/3.5/library/http.client.html#module-http.client\" target=\"_blank\" rel=\"noopener\"><code>http.client</code></a> 低级 HTTP 协议客户端; 高级 HTTP 协议客户端使用 <a href=\"https://docs.python.org/3.5/library/urllib.request.html#module-urllib.request\" target=\"_blank\" rel=\"noopener\"><code>urllib.request</code></a></li>\n<li><a href=\"https://docs.python.org/3.5/library/http.server.html#module-http.server\" target=\"_blank\" rel=\"noopener\"><code>http.server</code></a> 基于 <a href=\"https://docs.python.org/3.5/library/socketserver.html#module-socketserver\" target=\"_blank\" rel=\"noopener\"><code>socketserver</code></a> 的基础 HTTP 服务端类</li>\n<li><a href=\"https://docs.python.org/3.5/library/http.cookies.html#module-http.cookies\" target=\"_blank\" rel=\"noopener\"><code>http.cookies</code></a> 使用cookie实施状态管理的实用程序</li>\n<li><a href=\"https://docs.python.org/3.5/library/http.cookiejar.html#module-http.cookiejar\" target=\"_blank\" rel=\"noopener\"><code>http.cookiejar</code></a> 提供cookie的持久性</li>\n</ul>\n<h4 id=\"ftplib-FTP-协议客户端\"><a href=\"#ftplib-FTP-协议客户端\" class=\"headerlink\" title=\"ftplib - FTP 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/ftplib.html?highlight=ftplib#module-ftplib\" target=\"_blank\" rel=\"noopener\"><code>ftplib</code></a> - FTP 协议客户端</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; from ftplib import FTP</span><br><span class=\"line\">&gt;&gt;&gt; ftp = FTP(&apos;ftp.debian.org&apos;)     # connect to host, default port</span><br><span class=\"line\">&gt;&gt;&gt; ftp.login()                     # user anonymous, passwd anonymous@</span><br><span class=\"line\">&apos;230 Login successful.&apos;</span><br><span class=\"line\">&gt;&gt;&gt; ftp.cwd(&apos;debian&apos;)               # change into &quot;debian&quot; directory</span><br><span class=\"line\">&gt;&gt;&gt; ftp.retrlines(&apos;LIST&apos;)           # list directory contents</span><br><span class=\"line\">-rw-rw-r--    1 1176     1176         1063 Jun 15 10:18 README</span><br><span class=\"line\">...</span><br><span class=\"line\">drwxr-sr-x    5 1176     1176         4096 Dec 19  2000 pool</span><br><span class=\"line\">drwxr-sr-x    4 1176     1176         4096 Nov 17  2008 project</span><br><span class=\"line\">drwxr-xr-x    3 1176     1176         4096 Oct 10  2012 tools</span><br><span class=\"line\">&apos;226 Directory send OK.&apos;</span><br><span class=\"line\">&gt;&gt;&gt; ftp.retrbinary(&apos;RETR README&apos;, open(&apos;README&apos;, &apos;wb&apos;).write)</span><br><span class=\"line\">&apos;226 Transfer complete.&apos;</span><br><span class=\"line\">&gt;&gt;&gt; ftp.quit()</span><br></pre></td></tr></table></figure>\n<blockquote><p>主动模式要求客户端和服务器端同时打开并且监听一个端口以创建连接。在这种情况下，客户端由于安装了防火墙会产生一些问题。所以，创立了被动模式。被动模式只要求服务器端产生一个监听相应端口的进程，这样就可以绕过客户端安装了防火墙的问题。</p>\n<footer><strong>主动和被动模式</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#%E4%B8%BB%E5%8A%A8%E5%92%8C%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">文件传输协议</a></cite></footer></blockquote>\n<blockquote>\n<p>从 Python2.1开始，默认为<strong>被动模式</strong>。</p>\n</blockquote>\n<h4 id=\"nntplib-网络新闻传输协议\"><a href=\"#nntplib-网络新闻传输协议\" class=\"headerlink\" title=\"nntplib - 网络新闻传输协议\"></a><a href=\"https://docs.python.org/3.6/library/nntplib.html?highlight=nntp#module-nntplib\" target=\"_blank\" rel=\"noopener\"><code>nntplib</code></a> - <a href=\"https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E6%96%B0%E8%81%9E%E5%82%B3%E8%BC%B8%E5%8D%94%E5%AE%9A\" target=\"_blank\" rel=\"noopener\">网络新闻传输协议</a></h4><h4 id=\"smtplib-SMTP-协议客户端\"><a href=\"#smtplib-SMTP-协议客户端\" class=\"headerlink\" title=\"smtplib - SMTP 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#module-smtplib\" target=\"_blank\" rel=\"noopener\"><code>smtplib</code></a> - SMTP 协议客户端</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; from smtplib import SMTP</span><br><span class=\"line\">&gt;&gt;&gt; with SMTP(&quot;domain.org&quot;) as smtp:</span><br><span class=\"line\">...     smtp.noop()</span><br><span class=\"line\">...</span><br><span class=\"line\">(250, b&apos;Ok&apos;)</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-objects\" target=\"_blank\" rel=\"noopener\"><code>SMTP Objects</code></a></strong> <a href=\"https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-example\" target=\"_blank\" rel=\"noopener\">Example</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prompt</span><span class=\"params\">(prompt)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> input(prompt).strip()</span><br><span class=\"line\"></span><br><span class=\"line\">fromaddr = prompt(<span class=\"string\">\"From: \"</span>)</span><br><span class=\"line\">toaddrs  = prompt(<span class=\"string\">\"To: \"</span>).split()</span><br><span class=\"line\">print(<span class=\"string\">\"Enter message, end with ^D (Unix) or ^Z (Windows):\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add the From: and To: headers at the start!</span></span><br><span class=\"line\">msg = (<span class=\"string\">\"From: %s\\r\\nTo: %s\\r\\n\\r\\n\"</span></span><br><span class=\"line\">       % (fromaddr, <span class=\"string\">\", \"</span>.join(toaddrs)))</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        line = input()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> EOFError:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> line:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    msg = msg + line</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"Message length is\"</span>, len(msg))</span><br><span class=\"line\"></span><br><span class=\"line\">server = smtplib.SMTP(<span class=\"string\">'localhost'</span>)</span><br><span class=\"line\">server.set_debuglevel(<span class=\"number\">1</span>)</span><br><span class=\"line\">server.sendmail(fromaddr, toaddrs, msg)</span><br><span class=\"line\">server.quit()</span><br></pre></td></tr></table></figure>\n<h4 id=\"郵局協议（Post-Office-Protocol，简称-POP）\"><a href=\"#郵局協议（Post-Office-Protocol，简称-POP）\" class=\"headerlink\" title=\"郵局協议（Post Office Protocol，简称 POP）\"></a><a href=\"https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A\" target=\"_blank\" rel=\"noopener\">郵局協议（Post Office Protocol，简称 POP）</a></h4><blockquote><p>POP支持离线邮件处理。其具体过程是：邮件发送到服务器上，电子邮件客户端调用邮件客户机程序以连接服务器，并下载所有未阅读的电子邮件。这种离线访问模式是一种存储转发服务，将邮件从邮件服务器端送到个人终端机器上，一般是PC机或MAC。一旦邮件发送到PC机或MAC上，邮件服务器上的邮件将会被删除。但目前的POP3邮件服务器大都可以“只下载邮件，服务器端并不删除”，也就是改进的POP3协议。</p>\n<footer><strong>邮局协议</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A\" target=\"_blank\" rel=\"noopener\">zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A</a></cite></footer></blockquote>\n<h5 id=\"poplib-POP3-协议客户端\"><a href=\"#poplib-POP3-协议客户端\" class=\"headerlink\" title=\"poplib - POP3 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/poplib.html?highlight=poplib#module-poplib\" target=\"_blank\" rel=\"noopener\"><code>poplib</code></a> - POP3 协议客户端</h5><p><a href=\"https://docs.python.org/3.6/library/poplib.html?highlight=poplib#pop3-objects\" target=\"_blank\" rel=\"noopener\"><code>POP3 Objects</code></a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> getpass, poplib</span><br><span class=\"line\"></span><br><span class=\"line\">M = poplib.POP3(<span class=\"string\">'localhost'</span>)</span><br><span class=\"line\">M.user(getpass.getuser())</span><br><span class=\"line\">M.pass_(getpass.getpass())</span><br><span class=\"line\">numMessages = len(M.list()[<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(numMessages):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> M.retr(i+<span class=\"number\">1</span>)[<span class=\"number\">1</span>]:</span><br><span class=\"line\">        print(j)</span><br></pre></td></tr></table></figure>\n<h4 id=\"因特网信息访问协议（缩写为-IMAP，以前称作-交互邮件访问协议）\"><a href=\"#因特网信息访问协议（缩写为-IMAP，以前称作-交互邮件访问协议）\" class=\"headerlink\" title=\"因特网信息访问协议（缩写为 IMAP，以前称作 交互邮件访问协议）\"></a><a href=\"https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"noopener\">因特网信息访问协议（缩写为 IMAP，以前称作 交互邮件访问协议）</a></h4><blockquote><p>因特网信息访问协议（缩写为IMAP，以前称作交互邮件访问协议）是一个应用层协议，用来从本地邮件客户端（如Microsoft Outlook、Outlook Express、Foxmail、Mozilla Thunderbird）访问远程服务器上的邮件。</p>\n<p>IMAP和POP3（Post Office Protocol - Version 3，邮局协议第三版）是邮件访问最为普遍的Internet标准协议。事实上所有现代的邮件客户端和服务器都对两者给予支持。IMAP现在的版本是“IMAP第四版第一次修订版”（IMAP4rev1），在 RFC 3501 中定义。</p>\n<footer><strong>因特网信息访问协议</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"noopener\">zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE</a></cite></footer></blockquote>\n<h5 id=\"imaplib-—-IMAP4-协议客户端\"><a href=\"#imaplib-—-IMAP4-协议客户端\" class=\"headerlink\" title=\"imaplib — IMAP4 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/imaplib.html#module-imaplib\" target=\"_blank\" rel=\"noopener\"><code>imaplib</code></a> — IMAP4 协议客户端</h5><p><a href=\"https://docs.python.org/3.6/library/imaplib.html#imap4-objects\" target=\"_blank\" rel=\"noopener\"><code>IMAP4 Objects</code></a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> getpass, imaplib</span><br><span class=\"line\"></span><br><span class=\"line\">M = imaplib.IMAP4()</span><br><span class=\"line\">M.login(getpass.getuser(), getpass.getpass())</span><br><span class=\"line\">M.select()</span><br><span class=\"line\">typ, data = M.search(<span class=\"keyword\">None</span>, <span class=\"string\">'ALL'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> data[<span class=\"number\">0</span>].split():</span><br><span class=\"line\">    typ, data = M.fetch(num, <span class=\"string\">'(RFC822)'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">'Message %s\\n%s\\n'</span> % (num, data[<span class=\"number\">0</span>][<span class=\"number\">1</span>]))</span><br><span class=\"line\">M.close()</span><br><span class=\"line\">M.logout()</span><br></pre></td></tr></table></figure>\n<h4 id=\"email-An-email-and-MIME-handling-package\"><a href=\"#email-An-email-and-MIME-handling-package\" class=\"headerlink\" title=\"email - An email and MIME handling package\"></a><a href=\"https://docs.python.org/3.6/library/email.html?highlight=email#module-email\" target=\"_blank\" rel=\"noopener\"><code>email</code></a> - An email and MIME handling package</h4><h4 id=\"smtpd-SMTP-服务端\"><a href=\"#smtpd-SMTP-服务端\" class=\"headerlink\" title=\"smtpd - SMTP 服务端\"></a><a href=\"https://docs.python.org/3.6/library/smtpd.html?highlight=smtpd#module-smtpd\" target=\"_blank\" rel=\"noopener\"><code>smtpd</code></a> - SMTP 服务端</h4><h4 id=\"base64-Base16-Base32-Base64-Base85-Data-Encodings\"><a href=\"#base64-Base16-Base32-Base64-Base85-Data-Encodings\" class=\"headerlink\" title=\"base64 - Base16, Base32, Base64, Base85 Data Encodings\"></a><a href=\"https://docs.python.org/3.6/library/base64.html?highlight=base64#module-base64\" target=\"_blank\" rel=\"noopener\"><code>base64</code></a> - Base16, Base32, Base64, Base85 Data Encodings</h4><h4 id=\"mimetypes-Map-filenames-to-MIME-types\"><a href=\"#mimetypes-Map-filenames-to-MIME-types\" class=\"headerlink\" title=\"mimetypes - Map filenames to MIME types\"></a><a href=\"https://docs.python.org/3.6/library/mimetypes.html?highlight=mimetypes#module-mimetypes\" target=\"_blank\" rel=\"noopener\"><code>mimetypes</code></a> - Map filenames to MIME types</h4><blockquote><p>互联网媒体类型（Internet media type，也称为MIME类型（MIME type）或内容类型（content type））是给互联网上传输的内容赋予的分类类型。一份内容的互联网媒体类型是由其文件格式与内容决定的。互联网媒体类型与文件拓展名相对应，因此计算机系统常常通过拓展名来确定一个文件的媒体类型并决定与其相关联的软件。互联网媒体类型的分类标准由互联网号码分配局（IANA）发布。1996年十一月，媒体类型在RFC 2045中被最初定义，当时仅被使用在SMTP协议的电子邮件中。现在其他的协议（比如HTTP或者SIP）也都常使用MIME类型。 一个MIME类型至少包括两个部分：一个类型（type）和一个子类型（subtype）。此外，它还可能包括一个或多个可选参数（optional parameter）。比如，HTML文件的互联网媒体类型可能是</p>\n<p>text/html; charset = UTF-8</p>\n<p>在这个例子中，文件类型为text，子类型为html，而charset是一个可选参数，其值为UTF-8。</p>\n<footer><strong>互联网媒体类型</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B\" target=\"_blank\" rel=\"noopener\">zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B</a></cite></footer></blockquote>\n<h4 id=\"binascii-Convert-between-binary-and-ASCII\"><a href=\"#binascii-Convert-between-binary-and-ASCII\" class=\"headerlink\" title=\"binascii - Convert between binary and ASCII\"></a><a href=\"https://docs.python.org/3.6/library/binascii.html?highlight=binascii#module-binascii\" target=\"_blank\" rel=\"noopener\"><code>binascii</code></a> - Convert between binary and ASCII</h4><h4 id=\"binhex-Encode-and-decode-binhex4-files\"><a href=\"#binhex-Encode-and-decode-binhex4-files\" class=\"headerlink\" title=\"binhex - Encode and decode binhex4 files\"></a><a href=\"https://docs.python.org/3.6/library/binhex.html?highlight=binhex#module-binhex\" target=\"_blank\" rel=\"noopener\"><code>binhex</code></a> - Encode and decode binhex4 files</h4><h4 id=\"quopri-Encode-and-decode-MIME-quoted-printable-data\"><a href=\"#quopri-Encode-and-decode-MIME-quoted-printable-data\" class=\"headerlink\" title=\"quopri - Encode and decode MIME quoted-printable data\"></a><a href=\"https://docs.python.org/3.6/library/quopri.html#module-quopri\" target=\"_blank\" rel=\"noopener\"><code>quopri</code></a> - Encode and decode MIME quoted-printable data</h4><h3 id=\"多线程编程\"><a href=\"#多线程编程\" class=\"headerlink\" title=\"多线程编程\"></a>多线程编程</h3><h4 id=\"thread-低级线程-API\"><a href=\"#thread-低级线程-API\" class=\"headerlink\" title=\"_thread - 低级线程 API\"></a><a href=\"https://docs.python.org/3.6/library/_thread.html#module-_thread\" target=\"_blank\" rel=\"noopener\"><code>_thread</code></a> - 低级线程 API</h4><h4 id=\"threading-基于-thread-的高级线程接口\"><a href=\"#threading-基于-thread-的高级线程接口\" class=\"headerlink\" title=\"threading - 基于 _thread 的高级线程接口\"></a><a href=\"https://docs.python.org/3.6/library/threading.html#module-threading\" target=\"_blank\" rel=\"noopener\"><code>threading</code></a> - 基于 <code>_thread</code> 的高级线程接口</h4><blockquote>\n<p><code>threading</code>模块支持守护线程(<a href=\"https://docs.python.org/3.6/library/threading.html?highlight=daemon#threading.Thread.daemon\" target=\"_blank\" rel=\"noopener\"><code>daemon</code></a> thread)，其工作方式是：守护线程一般是一个等待客户端请求服务的服务器。如果没有客户端请求，守护线程就是空闲的。如果把一个线程设置为守护线程，就表示这个线程是<strong>不重要的</strong>，进程退出时不需要等待这个线程执行完成。</p>\n<p>如果主线程准备退出时，不需要等待某些子线程完成，就可以为这些子线程设置守护线程标记。</p>\n</blockquote>\n<h5 id=\"创建-Thread-实例，传给它一个函数\"><a href=\"#创建-Thread-实例，传给它一个函数\" class=\"headerlink\" title=\"创建 Thread 实例，传给它一个函数\"></a>创建 Thread 实例，传给它一个函数</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep, ctime</span><br><span class=\"line\"></span><br><span class=\"line\">loops = [<span class=\"number\">4</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">loop</span><span class=\"params\">(nloop, nsec)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'start loop'</span>, nloop, <span class=\"string\">'at:'</span>, ctime())</span><br><span class=\"line\">    sleep(nsec)</span><br><span class=\"line\">    print(<span class=\"string\">'loop'</span>, nloop, <span class=\"string\">'done at:'</span>, ctime())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'starting at:'</span>, ctime())</span><br><span class=\"line\">    threads = []</span><br><span class=\"line\">    nloops = list(range(len(loops)))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> nloops:</span><br><span class=\"line\">        t = threading.Thread(target=loop,</span><br><span class=\"line\">                             args=(i, loops[i]))</span><br><span class=\"line\">        threads.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> nloops:  <span class=\"comment\"># start threads</span></span><br><span class=\"line\">        threads[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> nloops:  <span class=\"comment\"># wait for all</span></span><br><span class=\"line\">        threads[i].join()  <span class=\"comment\"># threads to finish</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'all DONE at:'</span>, ctime())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>当所有线程都被分配完毕后，通过调用每个线程的 <code>start()</code> 方法让它们开始执行，而不是在这之前就会执行。</p>\n<p><code>join()</code> 方法将等待线程结束，或者在提供了超时时间的情况下，达到超时时间。一旦线程启动，它们就会一直执行，知道给定的函数完成之后退出。如果主线程还有其他事情要做，而不是等待某些线程完成，就可以不调用 <code>join()</code> 。 <code>join()</code> 方法只有在需要等待线程完成的时候才是有用的。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><h4 id=\"re-—-Regular-expression-operations\"><a href=\"#re-—-Regular-expression-operations\" class=\"headerlink\" title=\"re — Regular expression operations\"></a><a href=\"https://docs.python.org/3.5/library/re.html?highlight=re#module-re\" target=\"_blank\" rel=\"noopener\"><code>re</code></a> — Regular expression operations</h4><blockquote>\n<p> <a href=\"https://docs.python.org/3.6/library/re.html?highlight=re#re.compile\" target=\"_blank\" rel=\"noopener\"><code>re.compile</code></a> 为正则表达式提供了预编译功能。如果程序在执行过程中需要多次调用到正则表达式对象，那么采用预编译可以提升执行性能。</p>\n</blockquote>\n<p>If you want to locate a match anywhere in <em>string</em>, use <a href=\"https://docs.python.org/3.6/library/re.html?highlight=re#re.regex.search\" target=\"_blank\" rel=\"noopener\"><code>search()</code></a> instead (see also <a href=\"https://docs.python.org/3.6/library/re.html?highlight=re#search-vs-match\" target=\"_blank\" rel=\"noopener\">search() vs. match()</a>).</p>\n<h3 id=\"网络编程\"><a href=\"#网络编程\" class=\"headerlink\" title=\"网络编程\"></a>网络编程</h3><h4 id=\"socket-低级网络接口\"><a href=\"#socket-低级网络接口\" class=\"headerlink\" title=\"socket - 低级网络接口\"></a><a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#module-socket\" target=\"_blank\" rel=\"noopener\">socket</a> - 低级网络接口</h4><ol>\n<li>基于文件的 Socket：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_UNIX\" target=\"_blank\" rel=\"noopener\"><code>socket.AF_UNIX</code></a></li>\n<li>基于网络的 Socket：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.AF_INET\" target=\"_blank\" rel=\"noopener\"><code>socket.AF_INET</code></a></li>\n</ol>\n<ol>\n<li>有链接的Socket(<strong>TCP</strong>)：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_STREAM\" target=\"_blank\" rel=\"noopener\"><code>socket.SOCK_STREAM</code></a></li>\n<li>无链接的Socket(<strong>UDP</strong>)：<a href=\"https://docs.python.org/3.6/library/socket.html?highlight=socket#socket.SOCK_DGRAM\" target=\"_blank\" rel=\"noopener\"><code>socket.SOCK_DGRAM</code></a></li>\n</ol>\n<p><code>tcpSock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</code></p>\n<p><strong>TCP服务端和客户端示例</strong></p>\n<figure class=\"highlight python\"><figcaption><span>服务端 tsTserv3.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> socket <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> ctime</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">''</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcpSerSock = socket(AF_INET, SOCK_STREAM)</span><br><span class=\"line\">tcpSerSock.bind(ADDR)</span><br><span class=\"line\">tcpSerSock.listen(<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'waiting for connection...'</span>)</span><br><span class=\"line\">    tcpCliSock, addr = tcpSerSock.accept()</span><br><span class=\"line\">    print(<span class=\"string\">'...connected from:'</span>, addr)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcpCliSock.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">#tcpCliSock.send('[%s] %s' % (bytes(ctime(), 'utf-8'), data))</span></span><br><span class=\"line\">        tcpCliSock.send(bytes(<span class=\"string\">'[%s] %s'</span> % (ctime(), data.decode(<span class=\"string\">'utf-8'</span>)), <span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">    tcpCliSock.close()</span><br><span class=\"line\">tcpSerSock.close()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><figcaption><span>客户端 tsTclnt3.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> socket <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcpCliSock = socket(AF_INET, SOCK_STREAM)</span><br><span class=\"line\">tcpCliSock.connect(ADDR)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    data = input(<span class=\"string\">'&gt; '</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    tcpCliSock.send(bytes(data, <span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    data = tcpCliSock.recv(BUFSIZ)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    print(data.decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">tcpCliSock.close()</span><br></pre></td></tr></table></figure>\n<p><strong>执行 TCP 服务端和客户端</strong></p>\n<p>服务端输出如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">waiting for connection...</span><br><span class=\"line\">...connected from: (&apos;127.0.0.1&apos;, 57223)</span><br></pre></td></tr></table></figure>\n<p>客户端输入及输出如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; hi</span><br><span class=\"line\">[Mon May  7 20:05:26 2018] hi</span><br><span class=\"line\">&gt; spanish</span><br><span class=\"line\">[Mon May  7 20:05:33 2018] spanish</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"socketserver-网络服务框架\"><a href=\"#socketserver-网络服务框架\" class=\"headerlink\" title=\"socketserver - 网络服务框架\"></a><a href=\"https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#module-socketserver\" target=\"_blank\" rel=\"noopener\"><code>socketserver</code></a> - 网络服务框架</h4><p><strong><a href=\"https://docs.python.org/3.6/library/socketserver.html?highlight=socketserver#examples\" target=\"_blank\" rel=\"noopener\">Examples</a></strong></p>\n<h4 id=\"asyncore-asynchat-异步-socket-处理器\"><a href=\"#asyncore-asynchat-异步-socket-处理器\" class=\"headerlink\" title=\"asyncore / asynchat - 异步 socket 处理器\"></a><a href=\"https://docs.python.org/3.6/library/asyncore.html?highlight=asyncore#module-asyncore\" target=\"_blank\" rel=\"noopener\"><code>asyncore</code></a> / <a href=\"https://docs.python.org/3.6/library/asynchat.html#module-asynchat\" target=\"_blank\" rel=\"noopener\"><code>asynchat</code></a> - 异步 socket 处理器</h4><h4 id=\"select-selectors\"><a href=\"#select-selectors\" class=\"headerlink\" title=\"select / selectors\"></a><a href=\"https://docs.python.org/3.6/library/select.html?highlight=select#module-select\" target=\"_blank\" rel=\"noopener\"><code>select</code></a> / <a href=\"https://docs.python.org/3.6/library/selectors.html#module-selectors\" target=\"_blank\" rel=\"noopener\"><code>selectors</code></a></h4><blockquote>\n<p>Note that on Windows, it only works for sockets;</p>\n<p>The <a href=\"https://docs.python.org/3.6/library/selectors.html#module-selectors\" target=\"_blank\" rel=\"noopener\"><code>selectors</code></a> module allows high-level and efficient I/O multiplexing, built upon the<a href=\"https://docs.python.org/3.6/library/select.html?highlight=select#module-select\" target=\"_blank\" rel=\"noopener\"><code>select</code></a> module primitives. Users are encouraged to use the <a href=\"https://docs.python.org/3.6/library/selectors.html#module-selectors\" target=\"_blank\" rel=\"noopener\"><code>selectors</code></a> module instead</p>\n</blockquote>\n<h3 id=\"因特网客户端编程\"><a href=\"#因特网客户端编程\" class=\"headerlink\" title=\"因特网客户端编程\"></a>因特网客户端编程</h3><h4 id=\"http-—-HTTP-包\"><a href=\"#http-—-HTTP-包\" class=\"headerlink\" title=\"http — HTTP 包\"></a><a href=\"https://docs.python.org/3.5/library/http.html#module-http\" target=\"_blank\" rel=\"noopener\"><code>http</code></a> — HTTP 包</h4><blockquote>\n<p>Python3.0起，原 <code>httplib</code> 模块被并入 <code>http</code> 包中。</p>\n</blockquote>\n<ul>\n<li><a href=\"https://docs.python.org/3.5/library/http.client.html#module-http.client\" target=\"_blank\" rel=\"noopener\"><code>http.client</code></a> 低级 HTTP 协议客户端; 高级 HTTP 协议客户端使用 <a href=\"https://docs.python.org/3.5/library/urllib.request.html#module-urllib.request\" target=\"_blank\" rel=\"noopener\"><code>urllib.request</code></a></li>\n<li><a href=\"https://docs.python.org/3.5/library/http.server.html#module-http.server\" target=\"_blank\" rel=\"noopener\"><code>http.server</code></a> 基于 <a href=\"https://docs.python.org/3.5/library/socketserver.html#module-socketserver\" target=\"_blank\" rel=\"noopener\"><code>socketserver</code></a> 的基础 HTTP 服务端类</li>\n<li><a href=\"https://docs.python.org/3.5/library/http.cookies.html#module-http.cookies\" target=\"_blank\" rel=\"noopener\"><code>http.cookies</code></a> 使用cookie实施状态管理的实用程序</li>\n<li><a href=\"https://docs.python.org/3.5/library/http.cookiejar.html#module-http.cookiejar\" target=\"_blank\" rel=\"noopener\"><code>http.cookiejar</code></a> 提供cookie的持久性</li>\n</ul>\n<h4 id=\"ftplib-FTP-协议客户端\"><a href=\"#ftplib-FTP-协议客户端\" class=\"headerlink\" title=\"ftplib - FTP 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/ftplib.html?highlight=ftplib#module-ftplib\" target=\"_blank\" rel=\"noopener\"><code>ftplib</code></a> - FTP 协议客户端</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; from ftplib import FTP</span><br><span class=\"line\">&gt;&gt;&gt; ftp = FTP(&apos;ftp.debian.org&apos;)     # connect to host, default port</span><br><span class=\"line\">&gt;&gt;&gt; ftp.login()                     # user anonymous, passwd anonymous@</span><br><span class=\"line\">&apos;230 Login successful.&apos;</span><br><span class=\"line\">&gt;&gt;&gt; ftp.cwd(&apos;debian&apos;)               # change into &quot;debian&quot; directory</span><br><span class=\"line\">&gt;&gt;&gt; ftp.retrlines(&apos;LIST&apos;)           # list directory contents</span><br><span class=\"line\">-rw-rw-r--    1 1176     1176         1063 Jun 15 10:18 README</span><br><span class=\"line\">...</span><br><span class=\"line\">drwxr-sr-x    5 1176     1176         4096 Dec 19  2000 pool</span><br><span class=\"line\">drwxr-sr-x    4 1176     1176         4096 Nov 17  2008 project</span><br><span class=\"line\">drwxr-xr-x    3 1176     1176         4096 Oct 10  2012 tools</span><br><span class=\"line\">&apos;226 Directory send OK.&apos;</span><br><span class=\"line\">&gt;&gt;&gt; ftp.retrbinary(&apos;RETR README&apos;, open(&apos;README&apos;, &apos;wb&apos;).write)</span><br><span class=\"line\">&apos;226 Transfer complete.&apos;</span><br><span class=\"line\">&gt;&gt;&gt; ftp.quit()</span><br></pre></td></tr></table></figure>\n<blockquote><p>主动模式要求客户端和服务器端同时打开并且监听一个端口以创建连接。在这种情况下，客户端由于安装了防火墙会产生一些问题。所以，创立了被动模式。被动模式只要求服务器端产生一个监听相应端口的进程，这样就可以绕过客户端安装了防火墙的问题。</p>\n<footer><strong>主动和被动模式</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#%E4%B8%BB%E5%8A%A8%E5%92%8C%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">文件传输协议</a></cite></footer></blockquote>\n<blockquote>\n<p>从 Python2.1开始，默认为<strong>被动模式</strong>。</p>\n</blockquote>\n<h4 id=\"nntplib-网络新闻传输协议\"><a href=\"#nntplib-网络新闻传输协议\" class=\"headerlink\" title=\"nntplib - 网络新闻传输协议\"></a><a href=\"https://docs.python.org/3.6/library/nntplib.html?highlight=nntp#module-nntplib\" target=\"_blank\" rel=\"noopener\"><code>nntplib</code></a> - <a href=\"https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E6%96%B0%E8%81%9E%E5%82%B3%E8%BC%B8%E5%8D%94%E5%AE%9A\" target=\"_blank\" rel=\"noopener\">网络新闻传输协议</a></h4><h4 id=\"smtplib-SMTP-协议客户端\"><a href=\"#smtplib-SMTP-协议客户端\" class=\"headerlink\" title=\"smtplib - SMTP 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#module-smtplib\" target=\"_blank\" rel=\"noopener\"><code>smtplib</code></a> - SMTP 协议客户端</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; from smtplib import SMTP</span><br><span class=\"line\">&gt;&gt;&gt; with SMTP(&quot;domain.org&quot;) as smtp:</span><br><span class=\"line\">...     smtp.noop()</span><br><span class=\"line\">...</span><br><span class=\"line\">(250, b&apos;Ok&apos;)</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-objects\" target=\"_blank\" rel=\"noopener\"><code>SMTP Objects</code></a></strong> <a href=\"https://docs.python.org/3.6/library/smtplib.html?highlight=smtplib#smtp-example\" target=\"_blank\" rel=\"noopener\">Example</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prompt</span><span class=\"params\">(prompt)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> input(prompt).strip()</span><br><span class=\"line\"></span><br><span class=\"line\">fromaddr = prompt(<span class=\"string\">\"From: \"</span>)</span><br><span class=\"line\">toaddrs  = prompt(<span class=\"string\">\"To: \"</span>).split()</span><br><span class=\"line\">print(<span class=\"string\">\"Enter message, end with ^D (Unix) or ^Z (Windows):\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add the From: and To: headers at the start!</span></span><br><span class=\"line\">msg = (<span class=\"string\">\"From: %s\\r\\nTo: %s\\r\\n\\r\\n\"</span></span><br><span class=\"line\">       % (fromaddr, <span class=\"string\">\", \"</span>.join(toaddrs)))</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        line = input()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> EOFError:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> line:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    msg = msg + line</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"Message length is\"</span>, len(msg))</span><br><span class=\"line\"></span><br><span class=\"line\">server = smtplib.SMTP(<span class=\"string\">'localhost'</span>)</span><br><span class=\"line\">server.set_debuglevel(<span class=\"number\">1</span>)</span><br><span class=\"line\">server.sendmail(fromaddr, toaddrs, msg)</span><br><span class=\"line\">server.quit()</span><br></pre></td></tr></table></figure>\n<h4 id=\"郵局協议（Post-Office-Protocol，简称-POP）\"><a href=\"#郵局協议（Post-Office-Protocol，简称-POP）\" class=\"headerlink\" title=\"郵局協议（Post Office Protocol，简称 POP）\"></a><a href=\"https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A\" target=\"_blank\" rel=\"noopener\">郵局協议（Post Office Protocol，简称 POP）</a></h4><blockquote><p>POP支持离线邮件处理。其具体过程是：邮件发送到服务器上，电子邮件客户端调用邮件客户机程序以连接服务器，并下载所有未阅读的电子邮件。这种离线访问模式是一种存储转发服务，将邮件从邮件服务器端送到个人终端机器上，一般是PC机或MAC。一旦邮件发送到PC机或MAC上，邮件服务器上的邮件将会被删除。但目前的POP3邮件服务器大都可以“只下载邮件，服务器端并不删除”，也就是改进的POP3协议。</p>\n<footer><strong>邮局协议</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A\" target=\"_blank\" rel=\"noopener\">zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A</a></cite></footer></blockquote>\n<h5 id=\"poplib-POP3-协议客户端\"><a href=\"#poplib-POP3-协议客户端\" class=\"headerlink\" title=\"poplib - POP3 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/poplib.html?highlight=poplib#module-poplib\" target=\"_blank\" rel=\"noopener\"><code>poplib</code></a> - POP3 协议客户端</h5><p><a href=\"https://docs.python.org/3.6/library/poplib.html?highlight=poplib#pop3-objects\" target=\"_blank\" rel=\"noopener\"><code>POP3 Objects</code></a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> getpass, poplib</span><br><span class=\"line\"></span><br><span class=\"line\">M = poplib.POP3(<span class=\"string\">'localhost'</span>)</span><br><span class=\"line\">M.user(getpass.getuser())</span><br><span class=\"line\">M.pass_(getpass.getpass())</span><br><span class=\"line\">numMessages = len(M.list()[<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(numMessages):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> M.retr(i+<span class=\"number\">1</span>)[<span class=\"number\">1</span>]:</span><br><span class=\"line\">        print(j)</span><br></pre></td></tr></table></figure>\n<h4 id=\"因特网信息访问协议（缩写为-IMAP，以前称作-交互邮件访问协议）\"><a href=\"#因特网信息访问协议（缩写为-IMAP，以前称作-交互邮件访问协议）\" class=\"headerlink\" title=\"因特网信息访问协议（缩写为 IMAP，以前称作 交互邮件访问协议）\"></a><a href=\"https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"noopener\">因特网信息访问协议（缩写为 IMAP，以前称作 交互邮件访问协议）</a></h4><blockquote><p>因特网信息访问协议（缩写为IMAP，以前称作交互邮件访问协议）是一个应用层协议，用来从本地邮件客户端（如Microsoft Outlook、Outlook Express、Foxmail、Mozilla Thunderbird）访问远程服务器上的邮件。</p>\n<p>IMAP和POP3（Post Office Protocol - Version 3，邮局协议第三版）是邮件访问最为普遍的Internet标准协议。事实上所有现代的邮件客户端和服务器都对两者给予支持。IMAP现在的版本是“IMAP第四版第一次修订版”（IMAP4rev1），在 RFC 3501 中定义。</p>\n<footer><strong>因特网信息访问协议</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"noopener\">zh.wikipedia.org/wiki/%E5%9B%A0%E7%89%B9%E7%BD%91%E4%BF%A1%E6%81%AF%E8%AE%BF%E9%97%AE%E5%8D%8F%E8%AE%AE</a></cite></footer></blockquote>\n<h5 id=\"imaplib-—-IMAP4-协议客户端\"><a href=\"#imaplib-—-IMAP4-协议客户端\" class=\"headerlink\" title=\"imaplib — IMAP4 协议客户端\"></a><a href=\"https://docs.python.org/3.6/library/imaplib.html#module-imaplib\" target=\"_blank\" rel=\"noopener\"><code>imaplib</code></a> — IMAP4 协议客户端</h5><p><a href=\"https://docs.python.org/3.6/library/imaplib.html#imap4-objects\" target=\"_blank\" rel=\"noopener\"><code>IMAP4 Objects</code></a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> getpass, imaplib</span><br><span class=\"line\"></span><br><span class=\"line\">M = imaplib.IMAP4()</span><br><span class=\"line\">M.login(getpass.getuser(), getpass.getpass())</span><br><span class=\"line\">M.select()</span><br><span class=\"line\">typ, data = M.search(<span class=\"keyword\">None</span>, <span class=\"string\">'ALL'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> data[<span class=\"number\">0</span>].split():</span><br><span class=\"line\">    typ, data = M.fetch(num, <span class=\"string\">'(RFC822)'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">'Message %s\\n%s\\n'</span> % (num, data[<span class=\"number\">0</span>][<span class=\"number\">1</span>]))</span><br><span class=\"line\">M.close()</span><br><span class=\"line\">M.logout()</span><br></pre></td></tr></table></figure>\n<h4 id=\"email-An-email-and-MIME-handling-package\"><a href=\"#email-An-email-and-MIME-handling-package\" class=\"headerlink\" title=\"email - An email and MIME handling package\"></a><a href=\"https://docs.python.org/3.6/library/email.html?highlight=email#module-email\" target=\"_blank\" rel=\"noopener\"><code>email</code></a> - An email and MIME handling package</h4><h4 id=\"smtpd-SMTP-服务端\"><a href=\"#smtpd-SMTP-服务端\" class=\"headerlink\" title=\"smtpd - SMTP 服务端\"></a><a href=\"https://docs.python.org/3.6/library/smtpd.html?highlight=smtpd#module-smtpd\" target=\"_blank\" rel=\"noopener\"><code>smtpd</code></a> - SMTP 服务端</h4><h4 id=\"base64-Base16-Base32-Base64-Base85-Data-Encodings\"><a href=\"#base64-Base16-Base32-Base64-Base85-Data-Encodings\" class=\"headerlink\" title=\"base64 - Base16, Base32, Base64, Base85 Data Encodings\"></a><a href=\"https://docs.python.org/3.6/library/base64.html?highlight=base64#module-base64\" target=\"_blank\" rel=\"noopener\"><code>base64</code></a> - Base16, Base32, Base64, Base85 Data Encodings</h4><h4 id=\"mimetypes-Map-filenames-to-MIME-types\"><a href=\"#mimetypes-Map-filenames-to-MIME-types\" class=\"headerlink\" title=\"mimetypes - Map filenames to MIME types\"></a><a href=\"https://docs.python.org/3.6/library/mimetypes.html?highlight=mimetypes#module-mimetypes\" target=\"_blank\" rel=\"noopener\"><code>mimetypes</code></a> - Map filenames to MIME types</h4><blockquote><p>互联网媒体类型（Internet media type，也称为MIME类型（MIME type）或内容类型（content type））是给互联网上传输的内容赋予的分类类型。一份内容的互联网媒体类型是由其文件格式与内容决定的。互联网媒体类型与文件拓展名相对应，因此计算机系统常常通过拓展名来确定一个文件的媒体类型并决定与其相关联的软件。互联网媒体类型的分类标准由互联网号码分配局（IANA）发布。1996年十一月，媒体类型在RFC 2045中被最初定义，当时仅被使用在SMTP协议的电子邮件中。现在其他的协议（比如HTTP或者SIP）也都常使用MIME类型。 一个MIME类型至少包括两个部分：一个类型（type）和一个子类型（subtype）。此外，它还可能包括一个或多个可选参数（optional parameter）。比如，HTML文件的互联网媒体类型可能是</p>\n<p>text/html; charset = UTF-8</p>\n<p>在这个例子中，文件类型为text，子类型为html，而charset是一个可选参数，其值为UTF-8。</p>\n<footer><strong>互联网媒体类型</strong><cite><a href=\"https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B\" target=\"_blank\" rel=\"noopener\">zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B</a></cite></footer></blockquote>\n<h4 id=\"binascii-Convert-between-binary-and-ASCII\"><a href=\"#binascii-Convert-between-binary-and-ASCII\" class=\"headerlink\" title=\"binascii - Convert between binary and ASCII\"></a><a href=\"https://docs.python.org/3.6/library/binascii.html?highlight=binascii#module-binascii\" target=\"_blank\" rel=\"noopener\"><code>binascii</code></a> - Convert between binary and ASCII</h4><h4 id=\"binhex-Encode-and-decode-binhex4-files\"><a href=\"#binhex-Encode-and-decode-binhex4-files\" class=\"headerlink\" title=\"binhex - Encode and decode binhex4 files\"></a><a href=\"https://docs.python.org/3.6/library/binhex.html?highlight=binhex#module-binhex\" target=\"_blank\" rel=\"noopener\"><code>binhex</code></a> - Encode and decode binhex4 files</h4><h4 id=\"quopri-Encode-and-decode-MIME-quoted-printable-data\"><a href=\"#quopri-Encode-and-decode-MIME-quoted-printable-data\" class=\"headerlink\" title=\"quopri - Encode and decode MIME quoted-printable data\"></a><a href=\"https://docs.python.org/3.6/library/quopri.html#module-quopri\" target=\"_blank\" rel=\"noopener\"><code>quopri</code></a> - Encode and decode MIME quoted-printable data</h4><h3 id=\"多线程编程\"><a href=\"#多线程编程\" class=\"headerlink\" title=\"多线程编程\"></a>多线程编程</h3><h4 id=\"thread-低级线程-API\"><a href=\"#thread-低级线程-API\" class=\"headerlink\" title=\"_thread - 低级线程 API\"></a><a href=\"https://docs.python.org/3.6/library/_thread.html#module-_thread\" target=\"_blank\" rel=\"noopener\"><code>_thread</code></a> - 低级线程 API</h4><h4 id=\"threading-基于-thread-的高级线程接口\"><a href=\"#threading-基于-thread-的高级线程接口\" class=\"headerlink\" title=\"threading - 基于 _thread 的高级线程接口\"></a><a href=\"https://docs.python.org/3.6/library/threading.html#module-threading\" target=\"_blank\" rel=\"noopener\"><code>threading</code></a> - 基于 <code>_thread</code> 的高级线程接口</h4><blockquote>\n<p><code>threading</code>模块支持守护线程(<a href=\"https://docs.python.org/3.6/library/threading.html?highlight=daemon#threading.Thread.daemon\" target=\"_blank\" rel=\"noopener\"><code>daemon</code></a> thread)，其工作方式是：守护线程一般是一个等待客户端请求服务的服务器。如果没有客户端请求，守护线程就是空闲的。如果把一个线程设置为守护线程，就表示这个线程是<strong>不重要的</strong>，进程退出时不需要等待这个线程执行完成。</p>\n<p>如果主线程准备退出时，不需要等待某些子线程完成，就可以为这些子线程设置守护线程标记。</p>\n</blockquote>\n<h5 id=\"创建-Thread-实例，传给它一个函数\"><a href=\"#创建-Thread-实例，传给它一个函数\" class=\"headerlink\" title=\"创建 Thread 实例，传给它一个函数\"></a>创建 Thread 实例，传给它一个函数</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep, ctime</span><br><span class=\"line\"></span><br><span class=\"line\">loops = [<span class=\"number\">4</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">loop</span><span class=\"params\">(nloop, nsec)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'start loop'</span>, nloop, <span class=\"string\">'at:'</span>, ctime())</span><br><span class=\"line\">    sleep(nsec)</span><br><span class=\"line\">    print(<span class=\"string\">'loop'</span>, nloop, <span class=\"string\">'done at:'</span>, ctime())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'starting at:'</span>, ctime())</span><br><span class=\"line\">    threads = []</span><br><span class=\"line\">    nloops = list(range(len(loops)))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> nloops:</span><br><span class=\"line\">        t = threading.Thread(target=loop,</span><br><span class=\"line\">                             args=(i, loops[i]))</span><br><span class=\"line\">        threads.append(t)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> nloops:  <span class=\"comment\"># start threads</span></span><br><span class=\"line\">        threads[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> nloops:  <span class=\"comment\"># wait for all</span></span><br><span class=\"line\">        threads[i].join()  <span class=\"comment\"># threads to finish</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'all DONE at:'</span>, ctime())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>当所有线程都被分配完毕后，通过调用每个线程的 <code>start()</code> 方法让它们开始执行，而不是在这之前就会执行。</p>\n<p><code>join()</code> 方法将等待线程结束，或者在提供了超时时间的情况下，达到超时时间。一旦线程启动，它们就会一直执行，知道给定的函数完成之后退出。如果主线程还有其他事情要做，而不是等待某些线程完成，就可以不调用 <code>join()</code> 。 <code>join()</code> 方法只有在需要等待线程完成的时候才是有用的。</p>\n"}],"PostAsset":[{"_id":"source/_posts/rljs/rljs.png","slug":"rljs.png","post":"cjgwyoalb0000g8bkolq9x5hg","modified":0,"renderable":0},{"_id":"source/_posts/rljs/timg.jpg","slug":"timg.jpg","post":"cjgwyoalb0000g8bkolq9x5hg","modified":0,"renderable":0},{"_id":"source/_posts/website/website.png","slug":"website.png","post":"cjgwyoan50007g8bkcvahgpn9","modified":0,"renderable":0},{"_id":"source/_posts/minjiekaifa/minjiekaifa.png","slug":"minjiekaifa.png","post":"cjgwyoamo0006g8bklshenys0","modified":0,"renderable":0},{"_id":"source/_posts/wuhezhizhong/wuhezhizhong.png","slug":"wuhezhizhong.png","post":"cjgwyoalw0002g8bkh01jjqnl","modified":0,"renderable":0},{"_id":"source/_posts/minjiekaifa/498627-20160828231647539-1014399922.png","slug":"498627-20160828231647539-1014399922.png","post":"cjgwyoamo0006g8bklshenys0","modified":0,"renderable":0},{"_id":"source/_posts/minjiekaifa/498627-20160828231739089-846443922.png","slug":"498627-20160828231739089-846443922.png","post":"cjgwyoamo0006g8bklshenys0","modified":0,"renderable":0},{"_id":"source/_posts/pythoncore/pythoncore.png","slug":"pythoncore.png","post":"cjgwyob0n000sg8bkesy4whei","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjgwyoalb0000g8bkolq9x5hg","category_id":"cjgwyoamg0004g8bkbbwe6qv5","_id":"cjgwyoano000ag8bkoevm3dmf"},{"post_id":"cjgwyoalw0002g8bkh01jjqnl","category_id":"cjgwyoamg0004g8bkbbwe6qv5","_id":"cjgwyoans000cg8bk6h6pdq44"},{"post_id":"cjgwyob0n000sg8bkesy4whei","category_id":"cjgwyob0q000tg8bk7klkjc1z","_id":"cjgwyob0v000zg8bkarzxjyuh"},{"post_id":"cjgwyob0n000sg8bkesy4whei","category_id":"cjgwyob0s000wg8bk3imc3s1q","_id":"cjgwyob0v0010g8bkmeszwy5f"}],"PostTag":[{"post_id":"cjgwyoalb0000g8bkolq9x5hg","tag_id":"cjgwyoaml0005g8bkz9my6674","_id":"cjgwyoanv000fg8bkwpmmsph0"},{"post_id":"cjgwyoalb0000g8bkolq9x5hg","tag_id":"cjgwyoanj0009g8bksy681wca","_id":"cjgwyoanx000gg8bkyb1io6ei"},{"post_id":"cjgwyoalb0000g8bkolq9x5hg","tag_id":"cjgwyoanp000bg8bke3atgti9","_id":"cjgwyoany000ig8bk4oicm5j0"},{"post_id":"cjgwyoalb0000g8bkolq9x5hg","tag_id":"cjgwyoans000dg8bk2u2ogteq","_id":"cjgwyoanz000jg8bkcpeji847"},{"post_id":"cjgwyoalw0002g8bkh01jjqnl","tag_id":"cjgwyoaml0005g8bkz9my6674","_id":"cjgwyoao1000lg8bkm7wqk1lh"},{"post_id":"cjgwyoalw0002g8bkh01jjqnl","tag_id":"cjgwyoanx000hg8bkj4ksmq8a","_id":"cjgwyoao1000mg8bkjibuq1zx"},{"post_id":"cjgwyoamo0006g8bklshenys0","tag_id":"cjgwyoao0000kg8bk1d7vr4d1","_id":"cjgwyoao7000pg8bku915h02i"},{"post_id":"cjgwyoamo0006g8bklshenys0","tag_id":"cjgwyoao2000ng8bkz6g0bdwv","_id":"cjgwyoao8000qg8bky2rh6qud"},{"post_id":"cjgwyoamo0006g8bklshenys0","tag_id":"cjgwyoao4000og8bk4vr4frht","_id":"cjgwyoao8000rg8bkrcyf6z9k"},{"post_id":"cjgwyob0n000sg8bkesy4whei","tag_id":"cjgwyob0r000ug8bk8cb53p2m","_id":"cjgwyob0t000xg8bk9zf6bil7"},{"post_id":"cjgwyob0n000sg8bkesy4whei","tag_id":"cjgwyob0r000vg8bkw7waxcx1","_id":"cjgwyob0u000yg8bk736qe2e5"}],"Tag":[{"name":"阅读","_id":"cjgwyoaml0005g8bkz9my6674"},{"name":"人文","_id":"cjgwyoanj0009g8bksy681wca"},{"name":"历史","_id":"cjgwyoanp000bg8bke3atgti9"},{"name":"社会科学","_id":"cjgwyoans000dg8bk2u2ogteq"},{"name":"心理学","_id":"cjgwyoanx000hg8bkj4ksmq8a"},{"name":"读书","_id":"cjgwyoao0000kg8bk1d7vr4d1"},{"name":"开发","_id":"cjgwyoao2000ng8bkz6g0bdwv"},{"name":"原则","_id":"cjgwyoao4000og8bk4vr4frht"},{"name":"编程","_id":"cjgwyob0r000ug8bk8cb53p2m"},{"name":"Python","_id":"cjgwyob0r000vg8bkw7waxcx1"}]}}